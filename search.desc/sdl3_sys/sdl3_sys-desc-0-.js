searchState.loadedDescShard("sdl3_sys", 0, "sdl3-sys: Low level Rust bindings for SDL 3\nA helpful assertion macro!\nSDL offers a way to perform I/O asynchronously. This …\nAtomic operations.\nAudio functionality for the SDL library.\nFunctions for fiddling with bits and bitmasks.\nBlend modes decide how two colors will mix together. There …\nYou can set a breakpoint on this function to break into …\nVideo capture for the SDL library.\nSDL provides access to the system clipboard, both for …\nCPU feature detection for SDL.\nFile dialog support.\nSimple error message routines for SDL.\nEvent queue management.\nReexports of everything from the other modules\nExtra ffi types for <code>sdl3-sys</code>\nSDL offers an API for examining and manipulating the system…\nSDL provides a low-level joystick API, which just treats …\nThe GPU API offers a cross-platform way for apps to talk …\nA GUID is a 128-bit value that represents something that …\nThe SDL haptic subsystem manages haptic (force feedback) …\nHeader file for SDL HIDAPI functions.\nThis file contains functions to set and get configuration …\nAll SDL programs need to initialize the library before …\nSDL provides an abstract interface for reading and writing …\nSDL joystick support.\nSDL keyboard management.\nDefines constants which identify keyboard keys and …\nSystem-dependent library loading routines.\nSDL locale services.\nSimple log messages with priorities and categories. A …\nRedefine main() if necessary so that it is called by SDL.\nSDL offers a simple message box API, which is useful for …\nFunctions to creating Metal layers and views on SDL …\nSDL API functions that don’t fit elsewhere.\nAny GUI application has to deal with the mouse, and SDL …\nSDL offers several thread synchronization primitives. This …\nSDL pen event handling.\nSDL offers facilities for pixel management.\nSDL provides a means to identify the app’s platform, …\nSDL power management routines.\nProcess control support.\nA property is a variable that can be created and retrieved …\nSome helper functions for managing rectangles and 2D …\nHeader file for SDL 2D rendering functions.\nDefines keyboard scancodes.\nSDL sensor management.\nSDL provides its own implementation of some of the most …\nThe storage API is a high-level API designed to abstract …\nSDL surfaces are buffers of pixels in system RAM. These …\nPlatform-specific SDL API functions. These are functions …\nSDL offers cross-platform thread management functions. …\nSDL realtime clock and date/time routines.\nSDL provides time management functionality. It is useful …\nSDL offers touch input, on platforms that support it. It …\nSDL offers a way to add items to the “system tray” …\nFunctionality to query the current SDL version, both as …\nSDL’s video subsystem is largely interested in …\nFunctions for creating Vulkan surfaces on SDL windows.\nTerminate the program.\nIgnore the assert from now on.\nMake the debugger trigger a breakpoint.\nIgnore the assert.\nNo value.\nRetry the assert immediately.\nTerminate the program.\nIgnore the assert from now on.\nMake the debugger trigger a breakpoint.\nIgnore the assert.\nRetry the assert immediately.\nThe level of assertion aggressiveness.\nThe macro used when an assertion triggers a breakpoint.\nInformation about an assertion failure.\nPossible outcomes from a triggered assertion.\nA callback that fires when an SDL assertion fails.\nGet the current assertion handler.\nGet a list of all assertion failures.\nGet the default assertion handler.\nNever call this directly.\nClear the list of all assertion failures.\nSet an application-defined assertion handler.\nAttempt to tell an attached debugger to pause.\nAn assertion test that is normally performed only in debug …\nAn assertion test that is always performed.\nAn assertion test that is performed only when built with …\nAn assertion test that is performed even in release builds.\nThe macro used when an assertion is disabled.\nThe macro used when an assertion is enabled.\nSome value of type <code>T</code>.\ntrue if app should always continue when assertion is …\nA string of this assert’s test code.\nInitialize all fields to zero\nThe source file where this assert lives.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe name of the function where this assert lives.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe line in <code>filename</code> where this assert lives.\nnext item in the linked list.\nNumber of times this assertion has been triggered.\nrequest was canceled before completing.\nA close operation.\nrequest was completed without error\nrequest failed for some reason; check <code>SDL_GetError()</code>!\nA read operation.\nrequest was canceled before completing.\nrequest was completed without error\nrequest failed for some reason; check <code>SDL_GetError()</code>!\nA close operation.\nA read operation.\nA write operation.\nThe asynchronous I/O operation structure.\nUse this function to create a new <code>SDL_AsyncIO</code> object for …\nInformation about a completed asynchronous I/O request.\nA queue of completed asynchronous I/O tasks.\nPossible outcomes of an asynchronous I/O task.\nTypes of asynchronous I/O tasks.\nClose and free any allocated resources for an async I/O …\nCreate a task queue for tracking multiple I/O operations.\nDestroy a previously-created async I/O task queue.\nQuery an async I/O task queue for completed tasks.\nUse this function to get the size of the data stream in an …\nLoad all the data from a file path, asynchronously.\nStart an async read.\nWake up any threads that are blocking in …\nBlock until an async I/O task queue has a completed task.\nStart an async write.\nA write operation.\nwhat generated this task. This pointer will be invalid if …\nbuffer where data was read/written.\nnumber of bytes the task was to read/write.\nactual number of bytes that were read/written.\nInitialize all fields to zero\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\noffset in the <code>SDL_AsyncIO</code> where data was read/written.\nthe result of the work (success, failure, cancellation).\nWhat sort of task was this? Read, write, etc?\npointer provided by the app when starting the task\nAdd to an atomic variable.\nDecrement an atomic variable used as a reference count.\nIncrement an atomic variable used as a reference count.\nA type representing an atomic integer value.\nA type representing an atomic unsigned 32-bit value.\nA macro to insert a CPU-specific “pause” instruction …\nSet an atomic variable to a new value if it is currently …\nSet a pointer to a new value if it is currently an old …\nSet an atomic variable to a new value if it is currently …\nMark a compiler barrier.\nGet the value of an atomic variable.\nGet the value of a pointer atomically.\nGet the value of an atomic variable.\nLock a spin lock by setting it to a non-zero value.\nInsert a memory acquire barrier (function version).\nInsert a memory release barrier (function version).\nSet an atomic variable to a value.\nSet a pointer to a value atomically.\nSet an atomic variable to a value.\nAn atomic spinlock.\nTry to lock a spin lock by setting it to a non-zero value.\nUnlock a spin lock by setting it to 0.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAs above, but big-endian byte order\n32-bit floating point samples\nNo value.\nNo value.\nAs above, but big-endian byte order\nSigned 16-bit samples\nAs above, but big-endian byte order\n32-bit integer samples\nSigned 8-bit samples\nRetrieve the size, in bits, from an <code>SDL_AudioFormat</code>.\nRetrieve the size, in bytes, from an <code>SDL_AudioFormat</code>.\nA value used to request a default playback audio device.\nA value used to request a default recording audio device.\nAs above, but big-endian byte order\n32-bit floating point samples\nCalculate the size of each audio frame (in bytes) from an …\nDetermine if an <code>SDL_AudioFormat</code> represents bigendian data.\nDetermine if an <code>SDL_AudioFormat</code> represents floating point …\nDetermine if an <code>SDL_AudioFormat</code> represents integer data.\nDetermine if an <code>SDL_AudioFormat</code> represents littleendian …\nDetermine if an <code>SDL_AudioFormat</code> represents signed data.\nDetermine if an <code>SDL_AudioFormat</code> represents unsigned data.\nMask of bits in an <code>SDL_AudioFormat</code> that contain the …\nMask of bits in an <code>SDL_AudioFormat</code> that contains the …\nMask of bits in an <code>SDL_AudioFormat</code> that contain the …\nMask of bits in an <code>SDL_AudioFormat</code> that contain the signed …\nAs above, but big-endian byte order\nSigned 16-bit samples\nAs above, but big-endian byte order\n32-bit integer samples\nSigned 8-bit samples\nUnsigned 8-bit samples\nUnspecified audio format\nSDL Audio Device instance IDs.\nUse this function to query if an audio device is paused.\nAudio format.\nA callback that fires when data is about to be fed to an …\nFormat specifier for audio data.\nThe opaque handle that represents an audio stream.\nA callback that fires when data passes through an …\nUse this function to query if an audio device associated …\nBind a single audio stream to an audio device.\nBind a list of audio streams to an audio device.\nClear any pending data in the stream.\nClose a previously-opened audio device.\nConvert some audio data of one format to another format.\nCreate a new audio stream.\nDefine an <code>SDL_AudioFormat</code> value.\nFree an audio stream.\nTell the stream that you’re done sending data, and …\nGet the current channel map of an audio device.\nGet the current audio format of a specific audio device.\nGet the gain of an audio device.\nGet the human-readable name of a specific audio device.\nUse this function to get the name of a built in audio …\nGet the human readable name of an audio format.\nGet a list of currently-connected audio playback devices.\nGet a list of currently-connected audio recording devices.\nGet the number of converted/resampled bytes available.\nGet converted/resampled data from the stream.\nQuery an audio stream for its currently-bound device.\nQuery the current format of an audio stream.\nGet the frequency ratio of an audio stream.\nGet the gain of an audio stream.\nGet the current input channel map of an audio stream.\nGet the current output channel map of an audio stream.\nGet the properties associated with an audio stream.\nGet the number of bytes currently queued.\nGet the name of the current audio driver.\nUse this function to get the number of built-in audio …\nGet the appropriate memset value for silencing an audio …\nDetermine if an audio device is physical (instead of …\nDetermine if an audio device is a playback device (instead …\nLoads a WAV from a file path.\nLoad the audio data of a WAVE file into memory.\nLock an audio stream for serialized access.\nMix audio data in a specified format.\nOpen a specific audio device.\nConvenience function for straightforward audio init for …\nUse this function to pause audio playback on a specified …\nUse this function to pause audio playback on the audio …\nAdd data to the stream.\nUse this function to unpause audio playback on a specified …\nUse this function to unpause audio playback on the audio …\nChange the gain of an audio device.\nSet a callback that fires when data is about to be fed to …\nChange the input and output formats of an audio stream.\nChange the frequency ratio of an audio stream.\nChange the gain of an audio stream.\nSet a callback that runs when data is requested from an …\nSet the current input channel map of an audio stream.\nSet the current output channel map of an audio stream.\nSet a callback that runs when data is added to an audio …\nUnbind a single audio stream from its audio device.\nUnbind a list of audio streams from their audio devices.\nUnlock an audio stream for serialized access.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nUnsigned 8-bit samples\nUnspecified audio format\nNumber of channels: 1 mono, 2 stereo, etc\nAudio data format\nsample rate: sample frames per second\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDetermine if a unsigned 32-bit value has exactly one bit …\nGet the index of the most significant (set) bit in a …\ndst + src: supported by all renderers\ndstA, dstA, dstA, dstA\ndstR, dstG, dstB, dstA\nmax(dst, src) : supported by D3D, OpenGL, OpenGLES, and …\nmin(dst, src) : supported by D3D, OpenGL, OpenGLES, and …\n1, 1, 1, 1\n1-dstA, 1-dstA, 1-dstA, 1-dstA\n1-dstR, 1-dstG, 1-dstB, 1-dstA\n1-srcA, 1-srcA, 1-srcA, 1-srcA\n1-srcR, 1-srcG, 1-srcB, 1-srcA\ndst - src : supported by D3D, OpenGL, OpenGLES, and Vulkan\ndstA, dstA, dstA, dstA\ndstR, dstG, dstB, dstA\n1, 1, 1, 1\n1-dstA, 1-dstA, 1-dstA, 1-dstA\n1-dstR, 1-dstG, 1-dstB, 1-dstA\n1-srcA, 1-srcA, 1-srcA, 1-srcA\n1-srcR, 1-srcG, 1-srcB, 1-srcA\nsrcA, srcA, srcA, srcA\nsrcR, srcG, srcB, srcA\n0, 0, 0, 0\nadditive blending: dstRGB = (srcRGB * srcA) + dstRGB, dstA …\npre-multiplied additive blending: dstRGB = srcRGB + …\nalpha blending: dstRGB = (srcRGB * srcA) + (dstRGB * …\npre-multiplied alpha blending: dstRGBA = srcRGBA + …\ncolor modulate: dstRGB = srcRGB * dstRGB, dstA = dstA\ncolor multiply: dstRGB = (srcRGB * dstRGB) + (dstRGB * …\nno blending: dstRGBA = srcRGBA\ndst + src: supported by all renderers\nmax(dst, src) : supported by D3D, OpenGL, OpenGLES, and …\nmin(dst, src) : supported by D3D, OpenGL, OpenGLES, and …\ndst - src : supported by D3D, OpenGL, OpenGLES, and Vulkan\nsrc - dst : supported by D3D, OpenGL, OpenGLES, and Vulkan\nThe normalized factor used to multiply pixel components.\nA set of blend modes used in drawing operations.\nThe blend operation used when combining source and …\nCompose a custom blend mode for renderers.\nsrcA, srcA, srcA, srcA\nsrcR, srcG, srcB, srcA\nsrc - dst : supported by D3D, OpenGL, OpenGLES, and Vulkan\n0, 0, 0, 0\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAcquire a frame.\nThe opaque structure used to identify an opened SDL camera.\nThis is a unique ID for a camera device for the time it is …\nThe position of camera in relation to system device.\nThe details of an output format for a camera device.\nUse this function to shut down camera processing and close …\nUse this function to get the name of a built in camera …\nGet the spec that a camera is using when generating images.\nGet the instance ID of an opened camera.\nGet the human-readable device name for a camera.\nQuery if camera access has been approved by the user.\nGet the position of the camera in relation to the system.\nGet the properties associated with an opened camera.\nGet the list of native formats/sizes a camera supports.\nGet a list of currently connected camera devices.\nGet the name of the current camera driver.\nUse this function to get the number of built-in camera …\nOpen a video recording device (a “camera”).\nRelease a frame of video acquired from a camera.\nFrame colorspace\nFrame format\nFrame rate demoninator ((num / denom) == FPS, (denom / …\nFrame rate numerator ((num / denom) == FPS, (denom / num) …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nFrame height\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nFrame width\nNo value.\nNo value.\nClear the clipboard data.\nCallback function that will be called when the clipboard …\nCallback function that will be called when data for the …\nGet the data from clipboard for a given mime type.\nRetrieve the list of mime types available in the clipboard.\nGet UTF-8 text from the clipboard.\nGet UTF-8 text from the primary selection.\nQuery whether there is data in the clipboard for the …\nQuery whether the clipboard exists and contains a …\nQuery whether the primary selection exists and contains a …\nOffer clipboard data to the OS.\nPut UTF-8 text into the clipboard.\nPut UTF-8 text into the primary selection.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nA guess for the cacheline size used for padding.\nDetermine the L1 cache line size of the CPU.\nGet the number of logical CPU cores available.\nReport the alignment this system needs for SIMD …\nGet the amount of RAM configured in the system.\nDetermine whether the CPU has ARM SIMD (ARMv6) features.\nDetermine whether the CPU has AVX features.\nDetermine whether the CPU has AVX2 features.\nDetermine whether the CPU has AVX-512F (foundation) …\nDetermine whether the CPU has AltiVec features.\nDetermine whether the CPU has LASX (LOONGARCH SIMD) …\nDetermine whether the CPU has LSX (LOONGARCH SIMD) …\nDetermine whether the CPU has MMX features.\nDetermine whether the CPU has NEON (ARM SIMD) features.\nDetermine whether the CPU has SSE features.\nDetermine whether the CPU has SSE2 features.\nDetermine whether the CPU has SSE3 features.\nDetermine whether the CPU has SSE4.1 features.\nDetermine whether the CPU has SSE4.2 features.\nNo value.\nCallback used by file dialog functions.\nAn entry for filters for file dialogs.\nVarious types of file dialogs.\nCreate and launch a file dialog with the specified …\nDisplays a dialog that lets the user select a file on …\nDisplays a dialog that lets the user select a folder on …\nDisplays a dialog that lets the user choose a new or …\nSome value of type <code>T</code>.\nInitialize all fields to zero\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nClear any previous error message for this thread.\nRetrieve a message about the last error that occurred on …\nA macro to standardize error reporting on unsupported …\nSet an error indicating that memory allocation failed.\nSet the SDL error message for the current thread.\nSet the SDL error message for the current thread.\nA macro to standardize error reporting on unsupported …\nAdd events to the back of the queue.\nA new audio device is available\nAn audio device’s format has been changed by the system.\nAn audio device has been removed.\nA new camera device is available\nA camera device has been approved for use by the user.\nA camera device has been denied for use by the user.\nA camera device has been removed.\nThe clipboard or primary selection changed\nThe application did enter the background and may not get …\nThe application is now interactive. This event must be …\nDisplay has been added to the system\nDisplay has changed content scale\nDisplay has changed current mode\nDisplay has changed desktop mode\nDisplay has changed position\nDisplay orientation has changed to data1\nDisplay has been removed from the system\nA new set of drops is beginning (NULL filename)\nCurrent set of drops is now complete (NULL filename)\nThe system requests a file open\nPosition while moving over the window\ntext/plain drag-and-drop event\nUnused (do not remove)\nA new gamepad has been inserted into the system\nGamepad axis motion\nGamepad button pressed\nGamepad button released\nThe gamepad mapping was updated\nA gamepad has been removed\nGamepad sensor was updated\nGamepad Steam handle has changed\nGamepad touchpad was touched\nGamepad touchpad finger was moved\nGamepad touchpad finger was lifted\nGamepad update is complete\nRetrieve/remove events from the front of the queue.\nA new joystick has been inserted into the system\nJoystick axis motion\nJoystick trackball motion\nJoystick battery level change\nJoystick button pressed\nJoystick button released\nJoystick hat position change\nAn opened joystick has been removed\nJoystick update is complete\nA new keyboard has been inserted into the system\nA keyboard has been removed\nKeymap changed due to a system event such as an input …\nKey pressed\nKey released\nThis last event is only for bounding internal arrays\nThe user’s locale preferences have changed.\nThe application is low on memory, free memory if possible. …\nA new mouse has been inserted into the system\nMouse button pressed\nMouse button released\nMouse moved\nA mouse has been removed\nMouse wheel motion\nNo value.\nCheck but don’t remove events from the queue front.\nPressure-sensitive pen angle/pressure/etc changed\nPressure-sensitive pen button pressed\nPressure-sensitive pen button released\nPressure-sensitive pen touched drawing surface\nPressure-sensitive pen is moving on the tablet\nPressure-sensitive pen has become available\nPressure-sensitive pen has become unavailable\nPressure-sensitive pen stopped touching drawing surface\nSignals the end of an event poll cycle\nUser-requested quit\nThe device has been lost and can’t be recovered.\nThe device has been reset and all textures need to be …\nThe render targets have been reset and their contents need …\nAdd events to the back of the queue.\nAdd a callback to be triggered when an event is added to …\nAudio device event structure (event.adevice.*)\nCamera device event structure (event.cdevice.*)\nAn event triggered when the clipboard contents have changed\nFields shared by every event\nDisplay state change event data (event.display.*)\nAn event used to drop text or request a file open by the …\nA new audio device is available\nAn audio device’s format has been changed by the system.\nAn audio device has been removed.\nA new camera device is available\nA camera device has been approved for use by the user.\nA camera device has been denied for use by the user.\nA camera device has been removed.\nThe clipboard or primary selection changed\nThe application did enter the background and may not get …\nThe application is now interactive. This event must be …\nDisplay has been added to the system\nDisplay has changed content scale\nDisplay has changed current mode\nDisplay has changed desktop mode\nDisplay has changed position\nDisplay orientation has changed to data1\nDisplay has been removed from the system\nA new set of drops is beginning (NULL filename)\nCurrent set of drops is now complete (NULL filename)\nThe system requests a file open\nPosition while moving over the window\ntext/plain drag-and-drop event\nUnused (do not remove)\nA new gamepad has been inserted into the system\nGamepad axis motion\nGamepad button pressed\nGamepad button released\nThe gamepad mapping was updated\nA gamepad has been removed\nGamepad sensor was updated\nGamepad Steam handle has changed\nGamepad touchpad was touched\nGamepad touchpad finger was moved\nGamepad touchpad finger was lifted\nGamepad update is complete\nA new joystick has been inserted into the system\nJoystick axis motion\nJoystick trackball motion\nJoystick battery level change\nJoystick button pressed\nJoystick button released\nJoystick hat position change\nAn opened joystick has been removed\nJoystick update is complete\nA new keyboard has been inserted into the system\nA keyboard has been removed\nKeymap changed due to a system event such as an input …\nKey pressed\nKey released\nThis last event is only for bounding internal arrays\nThe user’s locale preferences have changed.\nThe application is low on memory, free memory if possible. …\nA new mouse has been inserted into the system\nMouse button pressed\nMouse button released\nMouse moved\nA mouse has been removed\nMouse wheel motion\nPressure-sensitive pen angle/pressure/etc changed\nPressure-sensitive pen button pressed\nPressure-sensitive pen button released\nPressure-sensitive pen touched drawing surface\nPressure-sensitive pen is moving on the tablet\nPressure-sensitive pen has become available\nPressure-sensitive pen has become unavailable\nPressure-sensitive pen stopped touching drawing surface\nSignals the end of an event poll cycle\nUser-requested quit\nThe device has been lost and can’t be recovered.\nThe device has been reset and all textures need to be …\nThe render targets have been reset and their contents need …\nA sensor was updated\nThe system theme changed\nThe application is being terminated by the OS. This event …\nKeyboard text editing (composition)\nKeyboard text editing candidates\nKeyboard text input\nEvents <code>SDL_EVENT_USER</code> through <code>SDL_EVENT_LAST</code> are for your …\nThe application is about to enter the background. This …\nThe application is about to enter the foreground. This …\nThe window manager requests that the window be closed\nThe window with the associated ID is being or has been …\nWindow has been moved to display data1\nWindow display scale has been changed\nThe window has entered fullscreen mode\nWindow has been exposed and should be redrawn, and can be …\nWindow has gained keyboard focus\nWindow has lost keyboard focus\nWindow HDR properties have changed\nWindow has been hidden\nWindow had a hit test that wasn’t <code>SDL_HITTEST_NORMAL</code>\nThe ICC profile of the window’s display has changed\nThe window has left fullscreen mode\nWindow has been maximized\nThe pixel size of a Metal view associated with the window …\nWindow has been minimized\nWindow has gained mouse focus\nWindow has lost mouse focus\nWindow has been moved to data1, data2\nThe window has been occluded\nThe pixel size of the window has changed to data1xdata2\nWindow has been resized to data1xdata2\nWindow has been restored to normal size and position\nThe window safe area has been changed\nWindow has been shown\nThe structure for all events in SDL.\nThe type of action to request from <code>SDL_PeepEvents()</code>.\nQuery the state of processing events by type.\nA function pointer used for callbacks that watch the event …\nThe types of events that can be delivered.\nRun a specific filter function on the current event queue, …\nClear events of a specific type from the event queue.\nClear events of a range of types from the event queue.\nRetrieve/remove events from the front of the queue.\nGamepad axis motion event structure (event.gaxis.*)\nGamepad button event structure (event.gbutton.*)\nGamepad device event structure (event.gdevice.*)\nGamepad sensor event structure (event.gsensor.*)\nGamepad touchpad event structure (event.gtouchpad.*)\nQuery the current event filter.\nGet window associated with an event.\nCheck for the existence of a certain event type in the …\nCheck for the existence of certain event types in the …\nJoystick axis motion event structure (event.jaxis.*)\nJoystick trackball motion event structure (event.jball.*)\nJoystick battery level change event structure …\nJoystick button event structure (event.jbutton.*)\nJoystick device event structure (event.jdevice.*)\nJoystick hat position change event structure (event.jhat.*)\nKeyboard device event structure (event.kdevice.*)\nKeyboard button event structure (event.key.*)\nMouse button event structure (event.button.*)\nMouse device event structure (event.mdevice.*)\nMouse motion event structure (event.motion.*)\nMouse wheel event structure (event.wheel.*)\nCheck but don’t remove events from the queue front.\nCheck the event queue for messages and optionally return …\nPressure-sensitive pen pressure / angle event structure …\nPressure-sensitive pen button event structure …\nPressure-sensitive pen motion event structure …\nPressure-sensitive pen proximity event structure …\nPressure-sensitive pen touched event structure …\nPoll for currently pending events.\nPump the event loop, gathering events from the input …\nAdd an event to the event queue.\nThe “quit requested” event\nAllocate a set of user-defined events, and return the …\nRemove an event watch callback added with …\nRenderer event structure (event.render.*)\nSensor event structure (event.sensor.*)\nSet the state of processing events by type.\nSet up a filter to process all events before they are …\nKeyboard IME candidates event structure …\nKeyboard text editing event structure (event.edit.*)\nKeyboard text input event structure (event.text.*)\nTouch finger event structure (event.tfinger.*)\nA user-defined event type (event.user.*)\nWait indefinitely for the next available event.\nWait until the specified timeout (in milliseconds) for the …\nWindow state change event data (event.window.*)\nA sensor was updated\nThe system theme changed\nSome value of type <code>T</code>.\nThe application is being terminated by the OS. This event …\nKeyboard text editing (composition)\nKeyboard text editing candidates\nKeyboard text input\nEvents <code>SDL_EVENT_USER</code> through <code>SDL_EVENT_LAST</code> are for your …\nThe application is about to enter the background. This …\nThe application is about to enter the foreground. This …\nThe window manager requests that the window be closed\nThe window with the associated ID is being or has been …\nWindow has been moved to display data1\nWindow display scale has been changed\nThe window has entered fullscreen mode\nWindow has been exposed and should be redrawn, and can be …\nWindow has gained keyboard focus\nWindow has lost keyboard focus\nWindow HDR properties have changed\nWindow has been hidden\nWindow had a hit test that wasn’t <code>SDL_HITTEST_NORMAL</code>\nThe ICC profile of the window’s display has changed\nThe window has left fullscreen mode\nWindow has been maximized\nThe pixel size of a Metal view associated with the window …\nWindow has been minimized\nWindow has gained mouse focus\nWindow has lost mouse focus\nWindow has been moved to data1, data2\nThe window has been occluded\nThe pixel size of the window has changed to data1xdata2\nWindow has been resized to data1xdata2\nWindow has been restored to normal size and position\nThe window safe area has been changed\nWindow has been shown\nAudio device event data\nThe joystick axis index\nThe gamepad axis (<code>SDL_GamepadAxis</code>)\nAxis that has changed\nThe joystick trackball index\nThe mouse button index\nThe joystick button index\nThe gamepad button (<code>SDL_GamepadButton</code>)\nThe pen button index (first button is 1).\nMouse button event data\nThe list of candidates, or NULL if there are no candidates …\nCamera device event data\n1 for single-click, 2 for double-click, etc.\nClipboard event data\nUser defined event code\nCommon event data\nUp to 3 values from the sensor, as defined in SDL_sensor.h\nThe text for <code>SDL_EVENT_DROP_TEXT</code> and the file name for …\nUp to 6 values from the sensor - additional values can be …\nevent dependent data\nevent dependent data\nUser defined data pointer\nevent dependent data\nevent dependent data\nUser defined data pointer\nInitialize all fields to zero\nInitialize all fields to zero\nInitialize all fields to zero\nInitialize all fields to zero\nInitialize all fields to zero\nInitialize all fields to zero\nInitialize all fields to zero\nSet to one of the SDL_MOUSEWHEEL_* defines. When FLIPPED …\nDisplay event data\nThe associated display\ntrue if the key is pressed\ntrue if the button is pressed\ntrue if the button is pressed\ntrue if the button is pressed\ntrue if the pen is touching or false if the pen is lifted …\ntrue if the button is pressed\nDrag and drop event data\nNormalized in the range -1…1\nNormalized in the range -1…1\nText editing event data\nText editing candidates event data\ntrue if eraser end is used (not all pens support this).\nThe index of the finger on the touchpad\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGamepad axis event data\nGamepad button event data\nGamepad device event data\nGamepad sensor event data\nGamepad touchpad event data\nThe joystick hat index\ntrue if the list is horizontal, false if it’s vertical\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nJoystick axis event data\nJoystick ball event data\nJoystick battery event data\nJoystick button event data\nJoystick device change event data\nJoystick hat event data\nKeyboard device change event data\nSDL virtual key code\nKeyboard event data\nThe length of selected editing text, or -1 if not set\nMouse device change event data\ncurrent mime types\ncurrent key modifiers\nMouse motion event data\nX coordinate, relative to window\nY coordinate, relative to window\nThe number of strings in <code>candidates</code>\nnumber of mime types\nare we owning the clipboard (internal update)\nPen axis event data\nPen button event data\nComplete pen input state at time of event\nComplete pen input state at time of event\nComplete pen input state at time of event\nComplete pen input state at time of event\nThe joystick battery percent charge remaining\nPen motion event data\nPen proximity event data\nNormalized in the range 0…1\nNormalized in the range 0…1\nPen tip touching event data\nQuit request event data\nThe platform dependent scancode for this event\nfalse if a playback device, true if a recording device.\nRender event data\ntrue if this is a key repeat\nSDL physical key code\nThe index of the selected candidate, or -1 if no candidate …\nThe type of the sensor, one of the values of <code>SDL_SensorType</code>\nSensor event data\nThe timestamp of the sensor reading in nanoseconds, not …\nThe timestamp of the sensor reading in nanoseconds, not …\nThe source app that sent this drop event, or NULL if that …\nThe start cursor of selected editing text, or -1 if not set\nThe current button state\nThe joystick battery state\nThe editing text\nThe input text, UTF-8 encoded\nText input event data\nTouch finger event data\nIn nanoseconds, populated using <code>SDL_GetTicksNS()</code>\nIn nanoseconds, populated using <code>SDL_GetTicksNS()</code>\nIn nanoseconds, populated using <code>SDL_GetTicksNS()</code>\nIn nanoseconds, populated using <code>SDL_GetTicksNS()</code>\nIn nanoseconds, populated using <code>SDL_GetTicksNS()</code>\nIn nanoseconds, populated using <code>SDL_GetTicksNS()</code>\nIn nanoseconds, populated using <code>SDL_GetTicksNS()</code>\nIn nanoseconds, populated using <code>SDL_GetTicksNS()</code>\nIn nanoseconds, populated using <code>SDL_GetTicksNS()</code>\nIn nanoseconds, populated using <code>SDL_GetTicksNS()</code>\nIn nanoseconds, populated using <code>SDL_GetTicksNS()</code>\nIn nanoseconds, populated using <code>SDL_GetTicksNS()</code>\nIn nanoseconds, populated using <code>SDL_GetTicksNS()</code>\nIn nanoseconds, populated using <code>SDL_GetTicksNS()</code>\nIn nanoseconds, populated using <code>SDL_GetTicksNS()</code>\nIn nanoseconds, populated using <code>SDL_GetTicksNS()</code>\nIn nanoseconds, populated using <code>SDL_GetTicksNS()</code>\nIn nanoseconds, populated using <code>SDL_GetTicksNS()</code>\nIn nanoseconds, populated using <code>SDL_GetTicksNS()</code>\nIn nanoseconds, populated using <code>SDL_GetTicksNS()</code>\nIn nanoseconds, populated using <code>SDL_GetTicksNS()</code>\nIn nanoseconds, populated using <code>SDL_GetTicksNS()</code>\nIn nanoseconds, populated using <code>SDL_GetTicksNS()</code>\nIn nanoseconds, populated using <code>SDL_GetTicksNS()</code>\nIn nanoseconds, populated using <code>SDL_GetTicksNS()</code>\nIn nanoseconds, populated using <code>SDL_GetTicksNS()</code>\nIn nanoseconds, populated using <code>SDL_GetTicksNS()</code>\nIn nanoseconds, populated using <code>SDL_GetTicksNS()</code>\nIn nanoseconds, populated using <code>SDL_GetTicksNS()</code>\nIn nanoseconds, populated using <code>SDL_GetTicksNS()</code>\nIn nanoseconds, populated using <code>SDL_GetTicksNS()</code>\nIn nanoseconds, populated using <code>SDL_GetTicksNS()</code>\nIn nanoseconds, populated using <code>SDL_GetTicksNS()</code>\nIn nanoseconds, populated using <code>SDL_GetTicksNS()</code>\nIn nanoseconds, populated using <code>SDL_GetTicksNS()</code>\nIn nanoseconds, populated using <code>SDL_GetTicksNS()</code>\nIn nanoseconds, populated using <code>SDL_GetTicksNS()</code>\nThe touch device id\nThe index of the touchpad\nEvent type, shared with all events, Uint32 to cover user …\nSDL_DISPLAYEVENT_*\nSDL_EVENT_WINDOW_*\n<code>SDL_EVENT_KEYBOARD_ADDED</code> or <code>SDL_EVENT_KEYBOARD_REMOVED</code>\n<code>SDL_EVENT_KEY_DOWN</code> or <code>SDL_EVENT_KEY_UP</code>\n<code>SDL_EVENT_TEXT_EDITING</code>\n<code>SDL_EVENT_TEXT_EDITING_CANDIDATES</code>\n<code>SDL_EVENT_TEXT_INPUT</code>\n<code>SDL_EVENT_MOUSE_ADDED</code> or <code>SDL_EVENT_MOUSE_REMOVED</code>\n<code>SDL_EVENT_MOUSE_MOTION</code>\n<code>SDL_EVENT_MOUSE_BUTTON_DOWN</code> or <code>SDL_EVENT_MOUSE_BUTTON_UP</code>\n<code>SDL_EVENT_MOUSE_WHEEL</code>\n<code>SDL_EVENT_JOYSTICK_AXIS_MOTION</code>\n<code>SDL_EVENT_JOYSTICK_BALL_MOTION</code>\n<code>SDL_EVENT_JOYSTICK_HAT_MOTION</code>\n<code>SDL_EVENT_JOYSTICK_BUTTON_DOWN</code> or …\n<code>SDL_EVENT_JOYSTICK_ADDED</code> or <code>SDL_EVENT_JOYSTICK_REMOVED</code> or …\n<code>SDL_EVENT_JOYSTICK_BATTERY_UPDATED</code>\n<code>SDL_EVENT_GAMEPAD_AXIS_MOTION</code>\n<code>SDL_EVENT_GAMEPAD_BUTTON_DOWN</code> or …\n<code>SDL_EVENT_GAMEPAD_ADDED</code>, <code>SDL_EVENT_GAMEPAD_REMOVED</code>, or …\n<code>SDL_EVENT_GAMEPAD_TOUCHPAD_DOWN</code> or …\n<code>SDL_EVENT_GAMEPAD_SENSOR_UPDATE</code>\n<code>SDL_EVENT_AUDIO_DEVICE_ADDED</code>, or …\n<code>SDL_EVENT_CAMERA_DEVICE_ADDED</code>, …\n<code>SDL_EVENT_RENDER_TARGETS_RESET</code>, …\n<code>SDL_EVENT_FINGER_DOWN</code>, <code>SDL_EVENT_FINGER_UP</code>, …\n<code>SDL_EVENT_PEN_PROXIMITY_IN</code> or <code>SDL_EVENT_PEN_PROXIMITY_OUT</code>\n<code>SDL_EVENT_PEN_MOTION</code>\n<code>SDL_EVENT_PEN_DOWN</code> or <code>SDL_EVENT_PEN_UP</code>\n<code>SDL_EVENT_PEN_BUTTON_DOWN</code> or <code>SDL_EVENT_PEN_BUTTON_UP</code>\n<code>SDL_EVENT_PEN_AXIS</code>\n<code>SDL_EVENT_DROP_BEGIN</code> or <code>SDL_EVENT_DROP_FILE</code> or …\n<code>SDL_EVENT_CLIPBOARD_UPDATE</code>\n<code>SDL_EVENT_SENSOR_UPDATE</code>\n<code>SDL_EVENT_QUIT</code>\n<code>SDL_EVENT_USER</code> through SDL_EVENT_LAST-1, Uint32 because …\nEvent type, shared with all events, Uint32 to cover user …\nCustom event data\nThe axis value (range: -32768 to 32767)\nThe hat position value.\nThe axis value (range: -32768 to 32767)\nNew value of axis\nMouse wheel event data\nThe keyboard instance id\nThe keyboard instance id, or 0 if unknown or virtual\nThe mouse instance id\nThe mouse instance id in relative mode, <code>SDL_TOUCH_MOUSEID</code> …\nThe mouse instance id in relative mode, <code>SDL_TOUCH_MOUSEID</code> …\nThe mouse instance id in relative mode or 0\nThe joystick instance id\nThe joystick instance id\nThe joystick instance id\nThe joystick instance id\nThe joystick instance id\nThe joystick instance id\nThe joystick instance id\nThe joystick instance id\nThe joystick instance id\nThe joystick instance id\nThe joystick instance id\n<code>SDL_AudioDeviceID</code> for the device being added or removed or …\n<code>SDL_CameraID</code> for the device being added or removed or …\nThe pen instance id\nThe pen instance id\nThe pen instance id\nThe pen instance id\nThe pen instance id\nThe instance ID of the sensor\nWindow event data\nThe associated window\nThe window with keyboard focus, if any\nThe window with keyboard focus, if any\nThe window with keyboard focus, if any\nThe window with keyboard focus, if any\nThe window with mouse focus, if any\nThe window with mouse focus, if any\nThe window with mouse focus, if any\nThe window containing the renderer in question.\nThe window underneath the finger, if any\nThe window with pen focus, if any\nThe window with pen focus, if any\nThe window with pen focus, if any\nThe window with mouse focus, if any\nThe window with pen focus, if any\nThe window that was dropped on, if any\nThe associated window if any\nX coordinate, relative to window\nX coordinate, relative to window\nThe amount scrolled horizontally, positive to the right …\nNormalized in the range 0…1 with 0 being on the left\nNormalized in the range 0…1\nX coordinate, relative to window\nX coordinate, relative to window\nX coordinate, relative to window\nX coordinate, relative to window\nX coordinate, relative to window (not on begin)\nThe relative motion in the X direction\nThe relative motion in the X direction\nY coordinate, relative to window\nY coordinate, relative to window\nThe amount scrolled vertically, positive away from the …\nNormalized in the range 0…1 with 0 being at the top\nNormalized in the range 0…1\nY coordinate, relative to window\nY coordinate, relative to window\nY coordinate, relative to window\nY coordinate, relative to window\nY coordinate, relative to window (not on begin)\nThe relative motion in the Y direction\nThe relative motion in the Y direction\nEquivalent to C’s <code>va_list</code> type. Enable the <code>nightly</code> …\nEquivalent to C’s <code>wchar_t</code> type. This is <code>u16</code> on Windows …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nValue that requests that enumeration continue.\nTotal number of types in this enum, not a folder type by …\nThe folder of files that are displayed on the desktop. …\na directory\nUser document files, possibly application-specific. This …\nStandard folder for user files downloaded from the …\nValue that requests that enumeration stop, as a failure.\na normal file\nThe folder which contains all of the current user’s …\nMusic files that can be played using a standard music …\npath does not exist\nNo value.\nsomething completely different like a device node (not a …\nImage files that can be displayed using a standard viewer …\nFiles that are meant to be shared with other users on the …\nSave files for games.\nApplication screenshots.\nCopy a file.\nCreate a directory, and any missing parent directories.\nValue that requests that enumeration continue.\nValue that requests that enumeration stop, as a failure.\nValue that requests that enumeration stop, successfully.\nEnumerate a directory through a callback function.\nCallback for directory enumeration.\nPossible results from an enumeration callback.\nTotal number of types in this enum, not a folder type by …\nThe folder of files that are displayed on the desktop. …\nUser document files, possibly application-specific. This …\nStandard folder for user files downloaded from the …\nThe folder which contains all of the current user’s …\nMusic files that can be played using a standard music …\nImage files that can be displayed using a standard viewer …\nFiles that are meant to be shared with other users on the …\nSave files for games.\nApplication screenshots.\nTemplate files to be used when the user requests the …\nVideo files that can be played using a standard video …\nThe type of the OS-provided default folder for a specific …\nGet the directory where the application was run from.\nGet what the system believes is the “current working …\nGet information about a filesystem path.\nGet the user-and-app-specific path where files can be …\nFinds the most suitable user folder for a specific purpose.\nEnumerate a directory tree, filtered by pattern, and …\nFlags for path matching.\na directory\na normal file\npath does not exist\nsomething completely different like a device node (not a …\nInformation about a path on the filesystem.\nTypes of filesystem entries.\nRemove a file or an empty directory.\nRename a file or directory.\nValue that requests that enumeration stop, successfully.\nSome value of type <code>T</code>.\nTemplate files to be used when the user requests the …\nVideo files that can be played using a standard video …\nthe last time the path was read\nthe time when the path was created\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nthe last time the path was modified\nthe file size in bytes\nthe path type\nRight face button (e.g. Xbox B button)\nUpper or primary paddle, under your left hand (e.g. Xbox …\nLower or secondary paddle, under your left hand (e.g. Xbox …\nAdditional button (e.g. Xbox Series X share button, PS5 …\nAdditional button\nAdditional button\nAdditional button\nAdditional button\nAdditional button\nTop face button (e.g. Xbox Y button)\nUpper or primary paddle, under your right hand (e.g. Xbox …\nLower or secondary paddle, under your right hand (e.g. …\nAdd support for gamepads that SDL is unaware of or change …\nLoad a set of gamepad mappings from a file.\nLoad a set of gamepad mappings from an <code>SDL_IOStream</code>.\nClose a gamepad previously opened with <code>SDL_OpenGamepad()</code>.\nRight face button (e.g. Xbox B button)\nUpper or primary paddle, under your left hand (e.g. Xbox …\nLower or secondary paddle, under your left hand (e.g. Xbox …\nAdditional button (e.g. Xbox Series X share button, PS5 …\nAdditional button\nAdditional button\nAdditional button\nAdditional button\nAdditional button\nTop face button (e.g. Xbox Y button)\nUpper or primary paddle, under your right hand (e.g. Xbox …\nLower or secondary paddle, under your right hand (e.g. …\nBottom face button (e.g. Xbox A button)\nPS4/PS5 touchpad button\nLeft face button (e.g. Xbox X button)\nThe structure used to identify an SDL gamepad\nThe list of axes available on a gamepad\nA mapping between one joystick input to a gamepad control.\nTypes of gamepad control bindings.\nThe list of buttons available on a gamepad\nThe set of gamepad button labels\nCheck if a gamepad has been opened and is currently …\nQuery the state of gamepad event processing.\nQuery whether a gamepad has a given axis.\nQuery whether a gamepad has a given button.\nReturn whether a gamepad has a particular sensor.\nQuery whether sensor data reporting is enabled for a …\nStandard gamepad types.\nReturn the sfSymbolsName for a given axis on a gamepad on …\nReturn the sfSymbolsName for a given button on a gamepad …\nGet the current state of an axis control on a gamepad.\nConvert a string into <code>SDL_GamepadAxis</code> enum.\nGet the SDL joystick layer bindings for a gamepad.\nGet the current state of a button on a gamepad.\nConvert a string into an <code>SDL_GamepadButton</code> enum.\nGet the label of a button on a gamepad.\nGet the label of a button on a gamepad.\nGet the connection state of a gamepad.\nGet the firmware version of an opened gamepad, if …\nGet the <code>SDL_Gamepad</code> associated with a joystick instance …\nGet the <code>SDL_Gamepad</code> associated with a player index.\nGet the implementation-dependent GUID of a gamepad.\nGet the instance ID of an opened gamepad.\nGet the underlying joystick from a gamepad.\nGet the current mapping of a gamepad.\nGet the gamepad mapping string for a given GUID.\nGet the mapping of a gamepad.\nGet the current gamepad mappings.\nGet the implementation-dependent name for an opened …\nGet the implementation dependent name of a gamepad.\nGet the implementation-dependent path for an opened …\nGet the implementation dependent path of a gamepad.\nGet the player index of an opened gamepad.\nGet the player index of a gamepad.\nGet the battery state of a gamepad.\nGet the USB product ID of an opened gamepad, if available.\nGet the USB product ID of a gamepad, if available.\nGet the product version of an opened gamepad, if available.\nGet the product version of a gamepad, if available.\nGet the properties associated with an opened gamepad.\nGet the current state of a gamepad sensor.\nGet the data rate (number of events per second) of a …\nGet the serial number of an opened gamepad, if available.\nGet the Steam Input handle of an opened gamepad, if …\nConvert from an <code>SDL_GamepadAxis</code> enum to a string.\nConvert from an <code>SDL_GamepadButton</code> enum to a string.\nConvert from an <code>SDL_GamepadType</code> enum to a string.\nGet the current state of a finger on a touchpad on a …\nGet the type of an opened gamepad.\nGet the type of a gamepad.\nConvert a string into <code>SDL_GamepadType</code> enum.\nGet the USB vendor ID of an opened gamepad, if available.\nGet the USB vendor ID of a gamepad, if available.\nGet a list of currently connected gamepads.\nGet the number of supported simultaneous fingers on a …\nGet the number of touchpads on a gamepad.\nGet the type of an opened gamepad, ignoring any mapping …\nGet the type of a gamepad, ignoring any mapping override.\nReturn whether a gamepad is currently connected.\nCheck if the given joystick is supported by the gamepad …\nOpen a gamepad for use.\nReinitialize the SDL mapping database to its initial state.\nStart a rumble effect on a gamepad.\nStart a rumble effect in the gamepad’s triggers.\nSend a gamepad specific effect packet.\nSet the state of gamepad event processing.\nUpdate a gamepad’s LED color.\nSet the current mapping of a joystick or gamepad.\nSet the player index of an opened gamepad.\nSet whether data reporting for a gamepad sensor is enabled.\nManually pump gamepad updates if not using the loop.\nBottom face button (e.g. Xbox A button)\nPS4/PS5 touchpad button\nLeft face button (e.g. Xbox X button)\nInitialize all fields to zero\nInitialize all fields to zero\nInitialize all fields to zero\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n(source * source_factor) + (destination * …\nThe comparison always evaluates true.\nBack-facing triangles are culled.\nSpecifies that the coordinates will clamp to the 0-1 range.\nThe contents of the texture will be cleared to a color.\nA triangle with clockwise vertex winding will be …\nblend constant\nA triangle with counter-clockwise vertex winding will be …\nThe texture is a cube image.\nThe texture is a cube array image.\nDecrements the current value and clamps to 0.\nDecrements the current value and wraps to the maximum …\nThe previous contents of the texture need not be …\nThe contents generated during the render pass are not …\ndestination alpha\ndestination color\nThe comparison evaluates reference == test.\nPolygons will be rendered via rasterization.\nFront-facing triangles are culled.\nThe comparison evaluates reference &gt; test.\nThe comparison evalutes reference &gt;= test.\nIncrements the current value and clamps to the maximum …\nIncrements the current value and wraps back to 0.\nAttribute addressing is a function of the instance index.\nBitwise-inverts the current value.\nKeeps the current value.\nThe comparison evaluates reference &lt; test.\nThe comparison evaluates reference &lt;= test.\nPolygon edges will be drawn as line segments.\nLinear filtering.\nLinear filtering.\nA series of separate lines.\nA series of connected lines.\nThe previous contents of the texture will be preserved.\nmax(source, destination)\nmin(source, destination)\nSpecifies that the coordinates will wrap around mirrored.\nPoint filtering.\nPoint filtering.\nThe comparison always evaluates false.\nNo triangles are culled.\nThe comparison evaluates reference != test.\n1\n1 - blend constant\n1 - destination alpha\n1 - destination color\n1 - source alpha\n1 - source color\nA series of separate points.\nSpecifies that the coordinates will wrap around.\nSets the value to reference.\nThe multisample contents generated during the render pass …\nThe multisample contents generated during the render pass …\n(destination * destination_factor) - (source * …\nAcquire a command buffer.\nAcquire a texture to use in presentation.\nBegins a compute pass on a command buffer.\nBegins a copy pass on a command buffer.\nBegins a render pass on a command buffer.\nBinds a compute pipeline on a command buffer for use in …\nBinds texture-sampler pairs for use on the compute shader.\nBinds storage buffers as readonly for use on the compute …\nBinds storage textures as readonly for use on the compute …\nBinds texture-sampler pairs for use on the fragment shader.\nBinds storage buffers for use on the fragment shader.\nBinds storage textures for use on the fragment shader.\nBinds a graphics pipeline on a render pass to be used in …\nBinds an index buffer on a command buffer for use with …\nBinds vertex buffers on a command buffer for use with …\nBinds texture-sampler pairs for use on the vertex shader.\nBinds storage buffers for use on the vertex shader.\nBinds storage textures for use on the vertex shader.\nBlits from a source texture region to a destination …\nCalculate the size in bytes of a texture format with …\nCancels a command buffer.\nClaims a window, creating a swapchain structure for it.\nPerforms a buffer-to-buffer copy.\nPerforms a texture-to-texture copy.\nCreates a buffer object to be used in graphics or compute …\nCreates a pipeline object to be used in a compute workflow.\nCreates a GPU context.\nCreates a GPU context.\nCreates a pipeline object to be used in a graphics …\nCreates a sampler object to be used when binding textures …\nCreates a shader to be used when creating a graphics …\nCreates a texture object to be used in graphics or compute …\nCreates a transfer buffer to be used when uploading to or …\nDestroys a GPU context previously returned by …\nDispatches compute work.\nDispatches compute work with parameters set from a buffer.\nCopies data from a buffer to a transfer buffer on the GPU …\nCopies data from a texture to a transfer buffer on the GPU …\nDraws data using bound graphics state with an index buffer …\nDraws data using bound graphics state with an index buffer …\nDraws data using bound graphics state.\nDraws data using bound graphics state and with draw …\nEnds the current compute pass.\nEnds the current copy pass.\nEnds the given render pass.\nCall this to resume GPU operation on Xbox when you receive …\nCall this to suspend GPU operation on Xbox when you …\nSpecifies a blending factor to be used when pixels in a …\nSpecifies the operator to be used when pixels in a render …\nA structure containing parameters for a blit command.\nA structure specifying a region of a texture used in the …\nAn opaque handle representing a buffer.\nA structure specifying parameters in a buffer binding call.\nA structure specifying the parameters of a buffer.\nA structure specifying a location in a buffer.\nA structure specifying a region of a buffer.\nSpecifies how a buffer is intended to be used by the …\nSpecifies which color components are written in a graphics …\nA structure specifying the blend state of a color target.\nA structure specifying the parameters of color targets …\nA structure specifying the parameters of a color target …\nAn opaque handle representing a command buffer.\nSpecifies a comparison operator for depth, stencil and …\nAn opaque handle representing a compute pass.\nAn opaque handle representing a compute pipeline.\nA structure specifying the parameters of a compute …\nAn opaque handle representing a copy pass.\nSpecifies the face of a cube map.\nSpecifies the facing direction in which triangle faces …\nA structure specifying the parameters of the graphics …\nA structure specifying the parameters of a depth-stencil …\nAn opaque handle representing the SDL_GPU context.\nAn opaque handle representing a fence.\nSpecifies the fill mode of the graphics pipeline.\nSpecifies a filter operation used by a sampler.\nSpecifies the vertex winding that will cause a triangle to …\nAn opaque handle representing a graphics pipeline.\nA structure specifying the parameters of a graphics …\nA structure specifying the descriptions of render targets …\nSpecifies the size of elements in an index buffer.\nA structure specifying the parameters of an indexed …\nA structure specifying the parameters of an indexed …\nA structure specifying the parameters of an indirect draw …\nSpecifies how the contents of a texture attached to a …\nA structure specifying the parameters of the graphics …\nSpecifies the timing that will be used to present …\nSpecifies the primitive topology of a graphics pipeline.\nA structure specifying the parameters of the graphics …\nAn opaque handle representing a render pass.\nSpecifies the sample count of a texture.\nAn opaque handle representing a sampler.\nSpecifies behavior of texture sampling when the …\nA structure specifying the parameters of a sampler.\nSpecifies a mipmap mode used by a sampler.\nAn opaque handle representing a compiled shader object.\nA structure specifying code and metadata for creating a …\nSpecifies the format of shader code.\nSpecifies which stage a shader program corresponds to.\nSpecifies what happens to a stored stencil value if …\nA structure specifying the stencil operation state of a …\nA structure specifying parameters related to binding …\nA structure specifying parameters related to binding …\nSpecifies how the contents of a texture attached to a …\nChecks for GPU runtime support.\nChecks for GPU runtime support.\nSpecifies the texture format and colorspace of the …\nAn opaque handle representing a texture.\nA structure specifying the parameters of a texture.\nSpecifies the pixel format of a texture.\nObtains the texel block size for a texture format.\nA structure specifying a location in a texture.\nA structure specifying a region of a texture.\nA structure specifying parameters in a sampler binding …\nDetermines whether a texture format is supported for a …\nDetermines if a sample count for a texture format is …\nA structure specifying parameters related to transferring …\nSpecifies the type of a texture.\nSpecifies how a texture is intended to be used by the …\nAn opaque handle representing a transfer buffer.\nA structure specifying the parameters of a transfer buffer.\nA structure specifying a location in a transfer buffer.\nSpecifies how a transfer buffer is intended to be used by …\nA structure specifying a vertex attribute.\nA structure specifying the parameters of vertex buffers …\nSpecifies the format of a vertex attribute.\nSpecifies the rate at which vertex attributes are pulled …\nA structure specifying the parameters of a graphics …\nA structure specifying a viewport.\nblend constant\ndestination alpha\ndestination color\n1\n1 - blend constant\n1 - destination alpha\n1 - destination color\n1 - source alpha\n1 - source color\nsource alpha\nmin(source alpha, 1 - destination alpha)\nsource color\n0\n(source * source_factor) + (destination * …\nmax(source, destination)\nmin(source, destination)\n(destination * destination_factor) - (source * …\n(source * source_factor) - (destination * …\nBuffer supports storage reads in the compute stage.\nBuffer supports storage writes in the compute stage.\nBuffer supports storage reads in graphics stages.\nBuffer is an index buffer.\nBuffer is an indirect buffer.\nBuffer is a vertex buffer.\nthe alpha component\nthe blue component\nthe green component\nthe red component\nThe comparison always evaluates true.\nThe comparison evaluates reference == test.\nThe comparison evaluates reference &gt; test.\nThe comparison evalutes reference &gt;= test.\nThe comparison evaluates reference &lt; test.\nThe comparison evaluates reference &lt;= test.\nThe comparison always evaluates false.\nThe comparison evaluates reference != test.\nBack-facing triangles are culled.\nFront-facing triangles are culled.\nNo triangles are culled.\nPolygons will be rendered via rasterization.\nPolygon edges will be drawn as line segments.\nLinear filtering.\nPoint filtering.\nA triangle with clockwise vertex winding will be …\nA triangle with counter-clockwise vertex winding will be …\nThe index elements are 16-bit.\nThe index elements are 32-bit.\nThe contents of the texture will be cleared to a color.\nThe previous contents of the texture need not be …\nThe previous contents of the texture will be preserved.\nA series of separate lines.\nA series of connected lines.\nA series of separate points.\nA series of separate triangles.\nA series of connected triangles.\nNo multisampling.\nMSAA 2x\nMSAA 4x\nMSAA 8x\nSpecifies that the coordinates will clamp to the 0-1 range.\nSpecifies that the coordinates will wrap around mirrored.\nSpecifies that the coordinates will wrap around.\nLinear filtering.\nPoint filtering.\nDXBC SM5_1 shaders for D3D12.\nDXIL SM6_0 shaders for D3D12.\nPrecompiled metallib shaders for Metal.\nMSL shaders for Metal.\nShaders for NDA’d platforms.\nSPIR-V shaders for Vulkan.\nDecrements the current value and clamps to 0.\nDecrements the current value and wraps to the maximum …\nIncrements the current value and clamps to the maximum …\nIncrements the current value and wraps back to 0.\nBitwise-inverts the current value.\nKeeps the current value.\nSets the value to reference.\nSets the value to 0.\nThe contents generated during the render pass are not …\nThe multisample contents generated during the render pass …\nThe multisample contents generated during the render pass …\nThe contents generated during the render pass will be …\nThe texture is a 2-dimensional image.\nThe texture is a 2-dimensional array image.\nThe texture is a 3-dimensional image.\nThe texture is a cube image.\nThe texture is a cube array image.\nTexture is a color render target.\nTexture supports storage reads in the compute stage.\nTexture supports reads and writes in the same compute …\nTexture supports storage writes in the compute stage.\nTexture is a depth stencil target.\nTexture supports storage reads in graphics stages.\nTexture supports sampling.\nAttribute addressing is a function of the instance index.\nAttribute addressing is a function of the vertex index.\nGenerates mipmaps for the given texture.\nReturns the name of the backend used to create this GPU …\nGet the name of a built in GPU driver.\nReturns the supported shader formats for this GPU context.\nObtains the texture format of the swapchain for the given …\nGet the number of GPU drivers compiled into SDL.\nInserts an arbitrary string label into the command buffer …\nMaps a transfer buffer into application address space.\nEnds the most-recently pushed debug group.\nPushes data to a uniform slot on the command buffer.\nBegins a debug group with an arbitary name.\nPushes data to a fragment uniform slot on the command …\nPushes data to a vertex uniform slot on the command buffer.\nChecks the status of a fence.\nFrees the given buffer as soon as it is safe to do so.\nFrees the given compute pipeline as soon as it is safe to …\nReleases a fence obtained from …\nFrees the given graphics pipeline as soon as it is safe to …\nFrees the given sampler as soon as it is safe to do so.\nFrees the given shader as soon as it is safe to do so.\nFrees the given texture as soon as it is safe to do so.\nFrees the given transfer buffer as soon as it is safe to …\nUnclaims a window, destroying its swapchain structure.\nConfigures the maximum allowed number of frames in flight.\nSets the current blend constants on a command buffer.\nSets an arbitrary string constant to label a buffer.\nSets the current scissor state on a command buffer.\nSets the current stencil reference value on a command …\nChanges the swapchain parameters for the given claimed …\nSets an arbitrary string constant to label a texture.\nSets the current viewport state on a command buffer.\nSubmits a command buffer so its commands can be processed …\nSubmits a command buffer so its commands can be processed …\nUnmaps a previously mapped transfer buffer.\nUploads data from a transfer buffer to a buffer.\nUploads data from a transfer buffer to a texture.\nBlocks the thread until a swapchain texture is available …\nBlocks the thread until the given fences are signaled.\nBlocks the thread until the GPU is completely idle.\nBlocks the thread until a swapchain texture is available …\nDetermines whether a presentation mode is supported by the …\nDetermines whether a swapchain composition is supported by …\nsource alpha\nmin(source alpha, 1 - destination alpha)\nsource color\nThe contents generated during the render pass will be …\n(source * source_factor) - (destination * …\nA series of separate triangles.\nA series of connected triangles.\nAttribute addressing is a function of the vertex index.\nSets the value to 0.\n0\nNo multisampling.\nThe index elements are 16-bit.\nMSAA 2x\nThe texture is a 2-dimensional image.\nThe texture is a 2-dimensional array image.\nThe index elements are 32-bit.\nThe texture is a 3-dimensional image.\nMSAA 4x\nMSAA 8x\nThe addressing mode for U coordinates outside [0, 1).\nThe addressing mode for V coordinates outside [0, 1).\nThe addressing mode for W coordinates outside [0, 1).\nThe blend operation for the alpha component.\nThe stencil op state for back-facing triangles.\nThe blend state to be used for the color target.\nThe buffer.\nThe buffer.\nThe buffer to bind. Must have been created with …\nThe buffer to bind. Must have been created with …\nThe binding slot of the associated vertex buffer.\nThe color to clear the color target to at the start of the …\nThe color to clear the destination region to before the …\nThe value to clear the depth component to at the beginning …\nThe value to clear the stencil component to at the …\nA pointer to shader code.\nA pointer to compute shader code.\nThe size in bytes of the code pointed to.\nThe size in bytes of the compute shader code pointed to.\nThe blend operation for the RGB components.\nA pointer to an array of color target descriptions.\nA bitmask specifying which of the RGBA components are …\nSelects the bits of the stencil values participating in …\nThe comparison operator to apply to fetched data before …\nThe comparison operator used in the stencil test.\nThe comparison operator used for depth testing.\nThe facing direction in which triangles will be culled.\ntrue cycles the texture if the texture is bound and …\ntrue cycles the texture if the texture is bound and any …\ntrue cycles the destination texture if it is already bound.\ntrue cycles the buffer if it is already bound.\ntrue cycles the texture if it is already bound.\ntrue cycles the resolve texture if the resolve texture is …\nThe depth of the region.\nInitialize all fields to zero\nInitialize all fields to zero\nInitialize all fields to zero\nInitialize all fields to zero\nInitialize all fields to zero\nInitialize all fields to zero\nInitialize all fields to zero\nInitialize all fields to zero\nInitialize all fields to zero\nInitialize all fields to zero\nInitialize all fields to zero\nInitialize all fields to zero\nInitialize all fields to zero\nInitialize all fields to zero\nInitialize all fields to zero\nInitialize all fields to zero\nInitialize all fields to zero\nInitialize all fields to zero\nInitialize all fields to zero\nThe maximum depth bias of a fragment.\nA scalar factor controlling the depth value added to each …\nA scalar factor applied to a fragment’s slope in depth …\nThe action performed on samples that pass the stencil test …\nThe pixel format of the depth-stencil target. Ignored if …\nThe depth-stencil state of the graphics pipeline.\nThe destination region for the blit.\nThe value to be multiplied by the destination alpha.\nThe value to be multiplied by the destination RGB value.\ntrue to enable anisotropic filtering.\nWhether blending is enabled for the color target.\nWhether the color write mask is enabled.\ntrue to enable comparison against a reference value during …\ntrue to bias fragment depth values.\ntrue to enable depth clip, false to enable depth clamp.\ntrue enables the depth test.\ntrue enables depth writes. Depth writes are always …\nEnables sample masking.\ntrue enables the stencil test.\nA pointer to a null-terminated UTF-8 string specifying the …\nA pointer to a null-terminated UTF-8 string specifying the …\nThe action performed on samples that fail the stencil test.\nWhether polygons will be filled in or drawn as lines.\nThe filter mode used when blitting.\nThe base index within the index buffer.\nThe ID of the first instance to draw.\nThe ID of the first instance to draw.\nThe index of the first vertex to draw.\nThe flip mode for the source region.\nThe size and type of the attribute data.\nThe format of the shader code.\nThe pixel format of the texture.\nThe pixel format of the texture to be used as a color …\nThe format of the compute shader code.\nThe fragment shader used by the graphics pipeline.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe vertex winding that will cause a triangle to be …\nThe stencil op state for front-facing triangles.\nThe number of local workgroups to dispatch in the X …\nThe number of local workgroups to dispatch in the Y …\nThe number of local workgroups to dispatch in the Z …\nThe height of the viewport.\nThe height of the region.\nThe height of the region.\ntrue specifies that the pipeline uses a depth-stencil …\nThe height of the texture.\nWhether attribute addressing is a function of the vertex …\nThe number of instances to draw using the same …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe layer index of the location.\nThe layer index to transfer.\nThe layer index to bind.\nThe layer count or depth of the texture. This value is …\nThe layer index or depth plane of the region. This value …\nThe layer index or depth plane to use as a color target. …\nWhat is done with the contents of the color target at the …\nWhat is done with the depth contents at the beginning of …\nWhat is done with the contents of the destination before …\nThe shader input location index.\nThe magnification filter to apply to lookups.\nThe anisotropy value clamp used by the sampler. If …\nThe maximum depth of the viewport.\nClamps the maximum of the computed LOD value.\nThe minimum depth of the viewport.\nThe minification filter to apply to lookups.\nClamps the minimum of the computed LOD value.\nThe mip level index of the location.\nThe mip level index to transfer.\nThe mip level index of the region.\nThe mip level to use as a color target.\nThe mip level index to bind.\nThe bias to be added to mipmap LOD calculation.\nThe mipmap filter to apply to lookups.\nThe multisample state of the graphics pipeline.\nThe number of color target descriptions in the above array.\nThe number of indices to draw per instance.\nThe number of instances to draw.\nThe number of instances to draw.\nThe number of mip levels in the texture.\nThe number of readonly storage buffers defined in the …\nThe number of readonly storage textures defined in the …\nThe number of read-write storage buffers defined in the …\nThe number of read-write storage textures defined in the …\nThe number of samplers defined in the shader.\nThe number of samplers defined in the shader.\nThe number of storage buffers defined in the shader.\nThe number of storage textures defined in the shader.\nThe number of uniform buffers defined in the shader.\nThe number of uniform buffers defined in the shader.\nThe number of vertex attribute descriptions in the above …\nThe number of vertex buffer descriptions in the above …\nThe number of vertices to draw.\nThe starting byte of the image data in the transfer buffer.\nThe starting byte of the buffer data in the transfer …\nThe starting byte within the buffer.\nThe starting byte within the buffer.\nThe byte offset of this attribute relative to the start of …\nThe starting byte of the data to bind in the buffer.\nThe action performed on samples that pass the depth and …\nThe byte pitch between consecutive elements of the vertex …\nThe number of pixels from one row to the next.\nThe primitive topology of the graphics pipeline.\nA properties ID for extensions. Should be 0 if no …\nA properties ID for extensions. Should be 0 if no …\nA properties ID for extensions. Should be 0 if no …\nA properties ID for extensions. Should be 0 if no …\nA properties ID for extensions. Should be 0 if no …\nA properties ID for extensions. Should be 0 if no …\nA properties ID for extensions. Should be 0 if no …\nThe rasterizer state of the graphics pipeline.\nThe layer index of the resolve texture to use for the …\nThe mip level of the resolve texture to use for the …\nThe texture that will receive the results of a multisample …\nThe number of rows from one layer/depth-slice to the next.\nThe number of samples per texel. Only applies if the …\nThe number of samples to be used in rasterization.\nDetermines which samples get updated in the render …\nThe sampler to bind.\nThe size in bytes of the region.\nThe size in bytes of the buffer.\nThe size in bytes of the transfer buffer.\nThe binding slot of the vertex buffer.\nThe source region for the blit.\nThe value to be multiplied by the source alpha.\nThe value to be multiplied by the source RGB value.\nThe stage the shader program corresponds to.\nWhat is done with the stencil contents at the beginning of …\nWhat is done with the stencil results of the render pass.\nWhat is done with the results of the render pass.\nWhat is done with the depth results of the render pass.\nFormats and blend modes for the render targets of the …\nThe texture used in the copy operation.\nThe texture used in the copy operation.\nThe texture.\nThe texture that will be used as a color target by a …\nThe texture that will be used as the depth stencil target …\nThe texture to bind. Must have been created with …\nThe texture to bind. Must have been created with …\nThe number of threads in the X dimension. This should …\nThe number of threads in the Y dimension. This should …\nThe number of threads in the Z dimension. This should …\nThe transfer buffer used in the transfer operation.\nThe transfer buffer used in the transfer operation.\nThe base dimensionality of the texture.\nHow the texture is intended to be used by the client.\nHow the buffer is intended to be used by the client.\nHow the transfer buffer is intended to be used by the …\nA pointer to an array of vertex attribute descriptions.\nA pointer to an array of vertex buffer descriptions.\nThe vertex layout of the graphics pipeline.\nThe value added to the vertex index before indexing into …\nThe vertex shader used by the graphics pipeline.\nThe width of the viewport.\nThe width of the region.\nThe width of the region.\nThe width of the texture.\nSelects the bits of the stencil values updated by the …\nThe left offset of the viewport.\nThe left offset of the location.\nThe left offset of the region.\nThe left offset of the region.\nThe top offset of the viewport.\nThe top offset of the location.\nThe top offset of the region.\nThe top offset of the region.\nThe front offset of the location.\nThe front offset of the region.\nAn <code>SDL_GUID</code> is a 128-bit identifier for an input device …\nGet an ASCII string representation for a given <code>SDL_GUID</code>.\nConvert a GUID string into a <code>SDL_GUID</code> structure.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nClose a haptic device previously opened with …\nCreate a new haptic effect on a specified device.\nDestroy a haptic effect on the device.\nGet the status of the current effect on the specified …\nGet the haptic device’s supported features in bitwise …\nGet the <code>SDL_Haptic</code> associated with an instance ID, if it …\nGet the instance ID of an opened haptic device.\nGet the implementation dependent name of a haptic device.\nGet the implementation dependent name of a haptic device.\nGet a list of currently connected haptic devices.\nGet the number of effects a haptic device can store.\nGet the number of effects a haptic device can play at the …\nGet the number of haptic axes the device has.\nDevice can set autocenter.\nUses cartesian coordinates for the direction.\nConstant effect supported.\nCustom effect is supported.\nDamper effect supported - uses axes velocity.\nFriction effect supported - uses axes movement.\nDevice can set global gain.\nInertia effect supported - uses axes acceleration.\nUsed to play a device an infinite number of times.\nLeft/Right effect supported.\nDevice can be paused.\nUses polar coordinates for the direction.\nRamp effect supported.\nReserved for future use.\nReserved for future use.\nReserved for future use.\nSawtoothdown wave effect supported.\nSawtoothup wave effect supported.\nSine wave effect supported.\nUses spherical coordinates for the direction.\nSpring effect supported - uses axes position.\nSquare wave effect supported.\nDevice can be queried for effect status.\nUse this value to play an effect on the steering wheel …\nTriangle wave effect supported.\nThe haptic structure used to identify an SDL haptic.\nA structure containing a template for a Condition effect.\nA structure containing a template for a Constant effect.\nA structure containing a template for the <code>SDL_HAPTIC_CUSTOM</code>…\nStructure that represents a haptic direction.\nThe generic template for any haptic effect.\nCheck to see if an effect is supported by a haptic device.\nThis is a unique ID for a haptic device for the time it is …\nA structure containing a template for a Left/Right effect.\nA structure containing a template for a Periodic effect.\nA structure containing a template for a Ramp effect.\nCheck whether rumble is supported on a haptic device.\nInitialize a haptic device for simple rumble playback.\nQuery if a joystick has haptic features.\nQuery whether or not the current mouse has haptic …\nOpen a haptic device for use.\nOpen a haptic device for use from a joystick device.\nTry to open a haptic device from the current mouse.\nPause a haptic device.\nRun a simple rumble effect on a haptic device.\nResume a haptic device.\nRun the haptic effect on its associated haptic device.\nSet the global autocenter of the device.\nSet the global gain of the specified haptic device.\nStop the haptic effect on its associated haptic device.\nStop all the currently playing effects on a haptic device.\nStop the simple rumble on a haptic device.\nUpdate the properties of an effect.\nDuration of the attack.\nDuration of the attack.\nDuration of the attack.\nDuration of the attack.\nLevel at the start of the attack.\nLevel at the start of the attack.\nLevel at the start of the attack.\nLevel at the start of the attack.\nButton that triggers the effect.\nButton that triggers the effect.\nButton that triggers the effect.\nButton that triggers the effect.\nButton that triggers the effect.\nPosition of the dead zone.\nAxes to use, minimum of one.\nCondition effect.\nConstant effect.\nCustom effect.\nShould contain channels*samples items.\nSize of the dead zone; max 0xFFFF: whole axis-range when …\nInitialize all fields to zero\nInitialize all fields to zero\nDelay before starting the effect.\nDelay before starting the effect.\nDelay before starting the effect.\nDelay before starting the effect.\nDelay before starting the effect.\nThe encoded direction.\nDirection of the effect.\nDirection of the effect.\nDirection of the effect.\nDirection of the effect.\nDirection of the effect.\nEnding strength level.\nDuration of the fade.\nDuration of the fade.\nDuration of the fade.\nDuration of the fade.\nLevel at the end of the fade.\nLevel at the end of the fade.\nLevel at the end of the fade.\nLevel at the end of the fade.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHow soon it can be triggered again after button.\nHow soon it can be triggered again after button.\nHow soon it can be triggered again after button.\nHow soon it can be triggered again after button.\nHow soon it can be triggered again after button.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nControl of the large controller motor.\nHow fast to increase the force towards the negative side.\nLevel when joystick is to the negative side; max 0xFFFF.\nLeft/Right effect.\nDuration of the effect.\nDuration of the effect.\nDuration of the effect.\nDuration of the effect.\nDuration of the effect in milliseconds.\nDuration of the effect.\nStrength of the constant effect.\nPeak value; if negative, equivalent to 180 degrees extra …\nMean value of the wave.\nPeriod of the wave.\nSample periods.\nPeriodic effect.\nPositive phase shift given by hundredth of a degree.\nRamp effect.\nHow fast to increase the force towards the positive side.\nLevel when joystick is to the positive side; max 0xFFFF.\nAmount of samples.\nControl of the small controller motor.\nBeginning strength level.\nThe type of encoding.\n<code>SDL_HAPTIC_CONSTANT</code>\n<code>SDL_HAPTIC_SINE</code>, <code>SDL_HAPTIC_SQUARE</code> <code>SDL_HAPTIC_TRIANGLE</code>, …\n<code>SDL_HAPTIC_SPRING</code>, <code>SDL_HAPTIC_DAMPER</code>, <code>SDL_HAPTIC_INERTIA</code> …\n<code>SDL_HAPTIC_RAMP</code>\n<code>SDL_HAPTIC_LEFTRIGHT</code>\n<code>SDL_HAPTIC_CUSTOM</code>\nEffect type.\nBluetooth or Bluetooth LE bus Specifications: …\nI2C bus Specifications: …\nBluetooth or Bluetooth LE bus Specifications: …\nI2C bus Specifications: …\nSPI bus Specifications: …\nUnknown bus type\nUSB bus Specifications: https://usb.org/hid\nStart or stop a BLE scan on iOS and tvOS to pair Steam …\nHID underlying bus types.\nClose a HID device.\nAn opaque handle representing an open HID device.\nCheck to see if devices may have been added or removed.\nInformation about a connected HID device\nEnumerate the HID Devices.\nFinalize the HIDAPI library.\nFree an enumeration linked list.\nGet the device info from a HID device.\nGet a feature report from a HID device.\nGet a string from a HID device, based on its string index.\nGet an input report from a HID device.\nGet The Manufacturer String from a HID device.\nGet The Product String from a HID device.\nGet a report descriptor from a HID device.\nGet The Serial Number String from a HID device.\nInitialize the HIDAPI library.\nOpen a HID device using a Vendor ID (VID), Product ID …\nOpen a HID device by its path name.\nRead an Input report from a HID device.\nRead an Input report from a HID device with timeout.\nSend a Feature report to the device.\nSet the device handle to be non-blocking.\nWrite an Output report to a HID device.\nSPI bus Specifications: …\nUnknown bus type\nUSB bus Specifications: https://usb.org/hid\nUnderlying bus type\nInitialize all fields to zero\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAdditional information about the USB interface. Valid on …\nThe USB interface which this logical device represents.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nManufacturer String\nPointer to the next device\nPlatform-specific device path\nDevice Product ID\nProduct string\nDevice Release Number in binary-coded decimal, also known …\nSerial Number\nUsage for this Device/Interface (Windows/Mac/hidraw only)\nUsage Page for this Device/Interface (Windows/Mac/hidraw …\nDevice Vendor ID\nNo value.\nAdd a function to watch a particular hint.\nGet the value of a hint.\nGet the boolean value of a hint variable.\nSpecify the behavior of Alt+Tab while the keyboard is …\nA variable to control whether the SDL activity is allowed …\nA variable to control whether the event loop will block …\nA variable to control whether low latency audio should be …\nA variable to control whether we trap the Android back …\nA variable controlling whether controllers used with the …\nA variable controlling whether the Apple TV remote’s …\nA variable setting the app ID string.\nA variable setting the application name.\nA variable controlling response to <code>SDL_assert</code> failures.\nSpecify the default ALSA audio device name.\nSpecify the default ALSA audio playback device name.\nSpecify the default ALSA audio recording device name.\nA variable controlling the audio category on iOS and macOS.\nA variable controlling the default audio channel count.\nSpecify an application icon name for an audio device.\nA variable controlling device buffer size.\nSpecify an audio stream name for an audio device.\nSpecify an application role for an audio device.\nSpecify the input file when recording audio using the disk …\nSpecify the output file when playing audio using the disk …\nA variable controlling the audio rate when using the disk …\nA variable that specifies an audio backend to use.\nA variable controlling the audio rate when using the dummy …\nA variable controlling the default audio format.\nA variable controlling the default audio frequency.\nA variable that causes SDL to not ignore audio “monitors…\nA variable controlling whether SDL updates joystick state …\nA variable controlling whether SDL updates sensor state …\nPrevent SDL from using version 4 of the bitmap header when …\nA variable that decides what camera backend to use.\nA variable that limits what CPU features are available.\nOverride for <code>SDL_GetDisplayUsableBounds()</code>.\nSpecify the EGL library to load.\nDisable giving back control to the browser automatically …\nSpecify the CSS selector used for the “default” …\nOverride the binding element for keyboard inputs for …\nA variable that controls whether the on-screen keyboard …\nA variable containing a list of evdev devices to use if …\nA variable controlling verbosity of the logging of SDL …\nA variable that specifies a dialog backend to use.\nA variable controlling whether raising the window should …\nA variable controlling how 3D acceleration is used to …\nA variable that lets you manually hint extra …\nA variable that lets you provide a file with extra …\nA variable that overrides the automatic controller type …\nA variable containing a list of devices to skip when …\nIf set, all devices will be skipped when scanning for game …\nA variable that controls whether the device’s built-in …\nThis variable sets the default text of the TextInput …\nThis variable sets the description of the TextInput window …\nThis variable sets the maximum input length of the …\nThis variable sets the input scope of the TextInput window …\nThis variable sets the title of the TextInput window on …\nA variable that specifies a GPU backend to use.\nA variable to control whether <code>SDL_hid_enumerate()</code> …\nA variable containing a list of devices to ignore in …\nA variable to control whether HIDAPI uses libusb for …\nA variable to control whether HIDAPI uses libusb only for …\nA variable to control whether HIDAPI uses udev for device …\nA variable describing what IME UI elements the application …\nA variable controlling whether the home indicator bar on …\nA variable that lets you enable joystick (and …\nA variable containing a list of arcade stick style …\nA variable containing a list of devices that are not …\nA variable containing a list of devices that should not be …\nA variable containing a list of devices that should be …\nA variable containing a comma separated list of devices to …\nA variable controlling whether DirectInput should be used …\nA variable controlling whether enhanced reports should be …\nA variable containing a list of flightstick style …\nA variable containing a list of devices that are not …\nA variable containing a list of devices known to have a …\nA variable containing a list of devices known not to have …\nA variable controlling whether GameInput should be used …\nA variable controlling whether the HIDAPI joystick drivers …\nA variable controlling whether Nintendo Switch Joy-Con …\nA variable controlling whether the HIDAPI driver for …\nA variable controlling whether rumble is used to implement …\nA variable controlling whether the Home button LED should …\nA variable controlling whether the HIDAPI driver for …\nA variable controlling whether the HIDAPI driver for …\nA variable controlling whether the HIDAPI driver for …\nA variable controlling whether the HIDAPI driver for PS3 …\nA variable controlling whether the Sony driver …\nA variable controlling whether the HIDAPI driver for PS4 …\nA variable controlling the update rate of the PS4 …\nA variable controlling whether the HIDAPI driver for PS5 …\nA variable controlling whether the player LEDs should be …\nA variable controlling whether the HIDAPI driver for …\nA variable controlling whether the HIDAPI driver for …\nA variable controlling whether the HIDAPI driver for …\nA variable controlling whether the HIDAPI driver for the …\nA variable controlling whether the Steam button LED should …\nA variable controlling whether the HIDAPI driver for HORI …\nA variable controlling whether the HIDAPI driver for …\nA variable controlling whether the Home button LED should …\nA variable controlling whether the player LEDs should be …\nA variable controlling whether Nintendo Switch Joy-Con …\nA variable controlling whether the HIDAPI driver for …\nA variable controlling whether the player LEDs should be …\nA variable controlling whether the HIDAPI driver for XBox …\nA variable controlling whether the HIDAPI driver for XBox …\nA variable controlling whether the player LEDs should be …\nA variable controlling whether the HIDAPI driver for XBox …\nA variable controlling whether the HIDAPI driver for XBox …\nA variable controlling whether the Home button LED should …\nA variable controlling whether IOKit should be used for …\nA variable controlling whether to use the classic …\nA variable controlling whether joysticks on Linux adhere …\nA variable controlling whether joysticks on Linux will …\nA variable controlling whether digital hats on Linux will …\nA variable controlling whether GCController should be used …\nA variable controlling whether the RAWINPUT joystick …\nA variable controlling whether the RAWINPUT driver should …\nA variable controlling whether the ROG Chakram mice should …\nA variable controlling whether a separate thread should be …\nA variable containing a list of throttle style controllers.\nA variable containing a list of devices that are not …\nA variable controlling whether Windows.Gaming.Input should …\nA variable containing a list of wheel style controllers.\nA variable containing a list of devices that are not wheel …\nA variable containing a list of devices known to have all …\nA variable that controls keycode representation in …\nA variable that controls what KMSDRM device to use.\nA variable that controls whether SDL requires DRM master …\nA variable controlling the default SDL log levels.\nA variable controlling whether to force the application to …\nA variable that determines whether Ctrl+Click should …\nA variable controlling whether dispatching OpenGL context …\nA variable controlling whether the Option key on macOS …\nA variable controlling whether <code>SDL_EVENT_MOUSE_WHEEL</code> event …\nRequest <code>SDL_AppIterate()</code> be called at a specific rate.\nA variable controlling whether the mouse is captured while …\nA variable setting which system cursor to use as the …\nA variable setting the double click radius, in pixels.\nA variable setting the double click time, in milliseconds.\nA variable controlling whether warping a hidden mouse …\nAllow mouse click events when clicking to focus an SDL …\nA variable setting the speed scale for mouse motion, in …\nA variable controlling whether the hardware cursor stays …\nA variable controlling whether relative mouse mode …\nA variable setting the scale for mouse motion, in floating …\nA variable controlling whether the system mouse …\nA variable controlling whether a motion event should be …\nA variable controlling whether mouse events should …\nA variable controlling whether the keyboard should be …\nTell SDL not to catch the SIGINT or SIGTERM signals on …\nA variable controlling what driver to use for OpenGL ES …\nSpecify the OpenGL library to load.\nMechanism to specify openvr_api library location\nA variable controlling which orientations are allowed on …\nA variable controlling whether pen events should generate …\nA variable controlling whether pen events should generate …\nA variable controlling the use of a sentinel event when …\nOverride for <code>SDL_GetPreferredLocales()</code>.\nA variable that decides whether to send <code>SDL_EVENT_QUIT</code> …\nA variable controlling whether to enable Direct3D 11+’s …\nA variable controlling whether the Direct3D device is …\nA variable specifying which render driver to use.\nA variable controlling whether to create the GPU device in …\nA variable controlling whether to prefer a low-power GPU …\nA variable controlling how the 2D render API renders lines.\nA variable controlling whether the Metal render driver …\nA variable controlling whether updates to the SDL screen …\nA variable controlling whether to enable Vulkan Validation …\nA variable to control whether the return key on the soft …\nA variable containing a list of ROG gamepad capable mice.\nA variable containing a list of devices that are not ROG …\nA variable controlling which Dispmanx layer to use on a …\nSpecify an “activity name” for screensaver inhibition.\nA variable controlling whether SDL calls dbus_shutdown() …\nA variable that specifies a backend to use for title …\nA variable that specifies a backend to use for user …\nSpecifies whether <code>SDL_THREAD_PRIORITY_TIME_CRITICAL</code> should …\nA string specifying additional information to use with …\nA variable that controls the timer resolution, in …\nA variable controlling whether touch events should …\nA variable controlling whether trackpads should be treated …\nA variable controlling whether the Android / tvOS remotes …\nA variable controlling whether the screensaver is enabled.\nA comma separated list containing the names of the …\nTell the video driver that we only want a double buffer.\nA variable that specifies a video backend to use.\nA variable controlling whether the dummy video driver …\nIf eglGetPlatformDisplay fails, fall back to calling …\nA variable controlling whether the OpenGL context should …\nA variable that specifies the menu visibility when a …\nA variable that specifies the policy for fullscreen Spaces …\nA variable controlling whether fullscreen windows are …\nA variable controlling whether the offscreen video driver …\nA variable controlling whether all window operations will …\nA variable controlling whether the libdecor Wayland …\nA variable controlling whether video mode emulation is …\nA variable controlling how modes with a non-native aspect …\nA variable controlling whether the libdecor Wayland …\nA variable forcing non-DPI-aware Wayland windows to output …\nA variable specifying which shader compiler to preload …\nA variable controlling whether the X11 _…\nA variable controlling whether the X11 _NET_WM_PING …\nA variable controlling whether SDL uses DirectColor …\nA variable forcing the content scaling factor for X11 …\nA variable forcing the visual ID used for X11 display …\nA variable forcing the visual ID chosen for new X11 …\nA variable controlling whether the X11 XRandR extension …\nA variable controlling whether touch should be enabled on …\nA variable controlling whether touch should be enabled on …\nA variable controlling the module path on the PlayStation …\nA variable controlling whether to perform PVR …\nA variable controlling whether OpenGL should be used …\nA variable overriding the resolution reported on the …\nA variable controlling which touchpad should generate …\nA variable overriding the display index used in …\nSpecify the Vulkan library to load.\nA variable controlling the maximum number of chunks in a …\nA variable controlling how the fact chunk affects the …\nA variable controlling how the size of the RIFF chunk …\nA variable controlling how a truncated WAVE file is …\nA variable controlling whether SDL generates window-close …\nA variable controlling whether menus can be opened with …\nA variable controlling whether the windows message loop is …\nA variable controlling whether SDL will clear the window …\nA variable controlling whether SDL uses Kernel Semaphores …\nA variable controlling whether GameInput is used for raw …\nA variable to specify custom icon resource id from RC file …\nA variable to specify custom icon resource id from RC file …\nA variable controlling whether raw keyboard events are …\nA variable controlling whether SDL uses the D3D9Ex API …\nA variable controlling whether the window is activated …\nA variable controlling whether the window is activated …\nIf set to “0” then never set the top-most flag on an …\nA variable controlling whether the window frame and title …\nA variable controlling whether X11 windows are marked as …\nA variable specifying the type of an X11 window.\nSpecify the XCB library to load for the X11 driver.\nA variable controlling whether XInput should be used for …\nA callback used to send notifications of hint value …\nAn enumeration of hint priorities.\nRemove a function watching a particular hint.\nReset a hint to the default value.\nReset all hints to the default values.\nSet a hint with normal priority.\nSet a hint with a specific priority.\nSome value of type <code>T</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nValue that requests that the app continue from the main …\nValue that requests termination with error from the main …\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nValue that requests that the app continue from the main …\nValue that requests termination with error from the main …\nValue that requests termination with success from the main …\nFunction pointer typedef for <code>SDL_AppEvent</code>.\nFunction pointer typedef for <code>SDL_AppInit</code>.\nFunction pointer typedef for <code>SDL_AppIterate</code>.\nFunction pointer typedef for <code>SDL_AppQuit</code>.\nReturn values for optional main callbacks.\nGet metadata about your app.\n<code>SDL_INIT_AUDIO</code> implies <code>SDL_INIT_EVENTS</code>\n<code>SDL_INIT_CAMERA</code> implies <code>SDL_INIT_EVENTS</code>\n<code>SDL_INIT_GAMEPAD</code> implies <code>SDL_INIT_JOYSTICK</code>\n<code>SDL_INIT_JOYSTICK</code> implies <code>SDL_INIT_EVENTS</code>, should be …\n<code>SDL_INIT_SENSOR</code> implies <code>SDL_INIT_EVENTS</code>\n<code>SDL_INIT_VIDEO</code> implies <code>SDL_INIT_EVENTS</code>, should be …\nInitialize the SDL library.\nInitialization flags for <code>SDL_Init</code> and/or <code>SDL_InitSubSystem</code>\nCompatibility function to initialize the SDL library.\nReturn whether this is the main thread.\nCallback run on the main thread.\nClean up all initialized subsystems.\nShut down specific SDL subsystems.\nCall a function on the main thread during event processing.\nSpecify basic metadata about your app.\nSpecify metadata about your app through a set of …\nGet a mask of the specified subsystems which are currently …\nValue that requests termination with success from the main …\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSeek relative to current read point\nSeek relative to the end of data\nEnd of file\nRead or write I/O error\nNon blocking I/O, not ready\nTried to write a read-only buffer\nEverything is ready (no errors and not EOF).\nClose and free an allocated <code>SDL_IOStream</code> structure.\nFlush any buffered data in the stream.\nGet the properties associated with an <code>SDL_IOStream</code>.\nUse this function to get the size of the data stream in an …\nQuery the stream status of an <code>SDL_IOStream</code>.\nUse this function to prepare a read-only memory buffer for …\nUse this function to create an <code>SDL_IOStream</code> that is backed …\nUse this function to create a new <code>SDL_IOStream</code> structure …\nUse this function to prepare a read-write memory buffer …\n<code>SDL_IOStream</code> status, set by a read or write operation.\nThe read/write operation structure.\nThe function pointers that drive an <code>SDL_IOStream</code>.\nPossible <code>whence</code> values for <code>SDL_IOStream</code> seeking.\nSeek relative to current read point\nSeek relative to the end of data\nSeek from the beginning of data\nEnd of file\nRead or write I/O error\nNon blocking I/O, not ready\nTried to write a read-only buffer\nEverything is ready (no errors and not EOF).\nTried to read a write-only buffer\nPrint to an <code>SDL_IOStream</code> data stream.\nPrint to an <code>SDL_IOStream</code> data stream.\nLoad all the data from a file path.\nLoad all the data from an SDL data stream.\nCreate a custom <code>SDL_IOStream</code>.\nRead from a data source.\nUse this function to read 16 bits of big-endian data from …\nUse this function to read 16 bits of little-endian data …\nUse this function to read 32 bits of big-endian data from …\nUse this function to read 32 bits of little-endian data …\nUse this function to read 64 bits of big-endian data from …\nUse this function to read 64 bits of little-endian data …\nUse this function to read a signed byte from an …\nUse this function to read 16 bits of big-endian data from …\nUse this function to read 16 bits of little-endian data …\nUse this function to read 32 bits of big-endian data from …\nUse this function to read 32 bits of little-endian data …\nUse this function to read 64 bits of big-endian data from …\nUse this function to read 64 bits of little-endian data …\nUse this function to read a byte from an <code>SDL_IOStream</code>.\nSave all the data into a file path.\nSave all the data into an SDL data stream.\nSeek within an <code>SDL_IOStream</code> data stream.\nDetermine the current read/write offset in an <code>SDL_IOStream</code> …\nWrite to an <code>SDL_IOStream</code> data stream.\nUse this function to write 16 bits in native format to an …\nUse this function to write 16 bits in native format to an …\nUse this function to write 32 bits in native format to an …\nUse this function to write 32 bits in native format to an …\nUse this function to write 64 bits in native format to an …\nUse this function to write 64 bits in native format to an …\nUse this function to write a signed byte to an <code>SDL_IOStream</code>…\nUse this function to write 16 bits in native format to an …\nUse this function to write 16 bits in native format to an …\nUse this function to write 32 bits in native format to an …\nUse this function to write 32 bits in native format to an …\nUse this function to write 64 bits in native format to an …\nUse this function to write 64 bits in native format to an …\nUse this function to write a byte to an <code>SDL_IOStream</code>.\nSeek from the beginning of data\nTried to read a write-only buffer\nClose and free any allocated resources.\nCreate a new <code>SDL_IOStreamInterface</code> initialized with …\nIf the stream is buffering, make sure the data is written …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new <code>SDL_IOStreamInterface</code> initialized with …\nRead up to <code>size</code> bytes from the data stream to the area …\nSeek to <code>offset</code> relative to <code>whence</code>, one of stdio’s whence …\nReturn the number of bytes in this <code>SDL_IOStream</code>\nWrite exactly <code>size</code> bytes from the area pointed at by <code>ptr</code> …\nCleans up the userdata when the joystick is detached\nImplements <code>SDL_RumbleJoystick()</code>\nImplements <code>SDL_RumbleJoystickTriggers()</code>\nAttach a new virtual joystick.\nClose a joystick previously opened with <code>SDL_OpenJoystick()</code>.\nDetach a virtual joystick.\nGet the current state of an axis control on a joystick.\nGet the initial state of an axis control on a joystick.\nGet the ball axis change since the last poll.\nGet the current state of a button on a joystick.\nGet the connection state of a joystick.\nGet the firmware version of an opened joystick, if …\nGet the <code>SDL_Joystick</code> associated with an instance ID, if it …\nGet the <code>SDL_Joystick</code> associated with a player index.\nGet the implementation-dependent GUID for the joystick.\nGet the implementation-dependent GUID of a joystick.\nGet the device information encoded in a <code>SDL_GUID</code> structure.\nGet the current state of a POV hat on a joystick.\nGet the instance ID of an opened joystick.\nGet the implementation dependent name of a joystick.\nGet the implementation dependent name of a joystick.\nGet the implementation dependent path of a joystick.\nGet the implementation dependent path of a joystick.\nGet the player index of an opened joystick.\nGet the player index of a joystick.\nGet the battery state of a joystick.\nGet the USB product ID of an opened joystick, if available.\nGet the USB product ID of a joystick, if available.\nGet the product version of an opened joystick, if …\nGet the product version of a joystick, if available.\nGet the properties associated with a joystick.\nGet the serial number of an opened joystick, if available.\nGet the type of an opened joystick.\nGet the type of a joystick, if available.\nGet the USB vendor ID of an opened joystick, if available.\nGet the USB vendor ID of a joystick, if available.\nGet a list of currently connected joysticks.\nGet the number of general axis controls on a joystick.\nGet the number of trackballs on a joystick.\nGet the number of buttons on a joystick.\nGet the number of POV hats on a joystick.\nReturn whether a joystick is currently connected.\nQuery whether or not a joystick is virtual.\nThe largest value an SDL_Joystick’s axis can report.\nThe smallest value an SDL_Joystick’s axis can report.\nThe joystick structure used to identify an SDL joystick.\nGet the status of a specified joystick.\nPossible connection states for a joystick device.\nQuery the state of joystick event processing.\nThis is a unique ID for a joystick for the time it is …\nAn enum of some common joystick types.\nLocking for atomic access to the joystick API.\nOpen a joystick for use.\nStart a rumble effect.\nStart a rumble effect in the joystick’s triggers.\nSend a joystick specific effect packet.\nSend a sensor update for an opened virtual joystick.\nSet the state of joystick event processing.\nUpdate a joystick’s LED color.\nSet the player index of an opened joystick.\nSet the state of an axis on an opened virtual joystick.\nGenerate ball motion on an opened virtual joystick.\nSet the state of a button on an opened virtual joystick.\nSet the state of a hat on an opened virtual joystick.\nSet touchpad finger state on an opened virtual joystick.\nUnlocking for atomic access to the joystick API.\nUpdate the current state of the open joysticks.\nThe structure that describes a virtual joystick.\nThe structure that describes a virtual joystick sensor.\nThe structure that describes a virtual joystick touchpad.\nImplements <code>SDL_SendJoystickEffect()</code>\nImplements <code>SDL_SetJoystickLED()</code>\nCalled when the player index is set\nImplements <code>SDL_SetGamepadSensorEnabled()</code>\nCalled when the joystick state should be updated\nA mask of which axes are valid for this controller e.g. (1 …\nA mask of which buttons are valid for this controller e.g. …\nCreate a new <code>SDL_VirtualJoystickDesc</code> initialized with …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nthe name of the joystick\nthe number of axes on this joystick\nthe number of balls on this joystick\nthe number of buttons on this joystick\nCreate a new <code>SDL_VirtualJoystickDesc</code> initialized with …\nthe number of simultaneous fingers on this touchpad\nthe number of hats on this joystick\nthe number of sensors on this joystick, requires <code>sensors</code> …\nthe number of touchpads on this joystick, requires …\nunused\nunused\nthe USB product ID of this joystick\nthe update frequency of this sensor, may be 0.0f\nA pointer to an array of sensor descriptions, required if …\nA pointer to an array of touchpad descriptions, required …\n<code>SDL_JoystickType</code>\nthe type of this sensor\nUser data pointer passed to callbacks\nthe USB vendor ID of this joystick\nthe version of this interface\nAll letters will be capitalized\nNo auto-capitalization will be done\nThe input is a number\nThe input is a secure PIN that is hidden\nThe input is a secure PIN that is visible\nAll letters will be capitalized\nNo auto-capitalization will be done\nThe first letter of sentences will be capitalized\nThe first letter of words will be capitalized\nAuto capitalization type.\nDismiss the composition window/IME without disabling the …\nGet a key code from a human-readable name.\nGet the key code corresponding to the given scancode …\nGet a human-readable name for a key.\nQuery the window which currently has keyboard focus.\nGet the name of a keyboard.\nGet a snapshot of the current state of the keyboard.\nGet a list of currently connected keyboards.\nGet the current key modifier state for the keyboard.\nGet the scancode corresponding to the given key code …\nGet a scancode from a human-readable name.\nGet a human-readable name for a scancode.\nGet the area used to type Unicode text input.\nReturn whether a keyboard is currently connected.\nCheck whether the platform has screen keyboard support.\nThis is a unique ID for a keyboard for the time it is …\nClear the state of the keyboard.\nCheck whether the screen keyboard is shown for given …\nSet the current key modifier state for the keyboard.\nSet a human-readable name for a scancode.\nSet the area used to type Unicode text input.\nStart accepting Unicode text input events in a window.\nStart accepting Unicode text input events in a window, …\nStop receiving any text input events in a window.\nThe input is a number\nThe input is a secure PIN that is hidden\nThe input is a secure PIN that is visible\nThe input is text\nThe input is an e-mail address\nThe input is a person’s name\nThe input is a secure password that is hidden\nThe input is a secure password that is visible\nThe input is a username\nCheck whether or not Unicode text input events are enabled …\nText input type.\nThe first letter of sentences will be capitalized\nThe input is text\nThe input is an e-mail address\nThe input is a person’s name\nThe input is a secure password that is hidden\nThe input is a secure password that is visible\nThe input is a username\nThe first letter of words will be capitalized\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n‘0’\n‘1’\n‘2’\n‘3’\n‘4’\n‘5’\n‘6’\n‘7’\n‘8’\n‘9’\n‘a’\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_AC_BACK</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_AC_BOOKMARKS</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_AC_CLOSE</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_AC_EXIT</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_AC_FORWARD</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_AC_HOME</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_AC_NEW</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_AC_OPEN</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_AC_PRINT</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_AC_PROPERTIES</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_AC_REFRESH</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_AC_SAVE</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_AC_SEARCH</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_AC_STOP</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_AGAIN</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_ALTERASE</code>)\n‘&amp;’\n‘&#39;’\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_APPLICATION</code>)\n‘*’\n‘@’\n‘b’\n‘\\’\n‘\\b’\n‘c’\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_CALL</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_CANCEL</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_CAPSLOCK</code>)\n‘^’\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_CHANNEL_DECREMENT</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_CHANNEL_INCREMENT</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_CLEAR</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_CLEARAGAIN</code>)\n‘:’\n‘,’\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_COPY</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_CRSEL</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_CURRENCYSUBUNIT</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_CURRENCYUNIT</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_CUT</code>)\n‘d’\n‘“’\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_DECIMALSEPARATOR</code>)\n‘\\x7F’\n‘$’\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_DOWN</code>)\n‘e’\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_END</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_ENDCALL</code>)\n‘=’\n‘\\x1B’\n‘!’\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_EXECUTE</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_EXSEL</code>)\n‘f’\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_F1</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_F10</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_F11</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_F12</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_F13</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_F14</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_F15</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_F16</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_F17</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_F18</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_F19</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_F2</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_F20</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_F21</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_F22</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_F23</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_F24</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_F3</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_F4</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_F5</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_F6</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_F7</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_F8</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_F9</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_FIND</code>)\n‘g’\n‘`’\n‘&gt;’\n‘h’\n‘#’\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_HELP</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_HOME</code>)\n‘i’\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_INSERT</code>)\n‘j’\n‘k’\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_0</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_00</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_000</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_1</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_2</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_3</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_4</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_5</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_6</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_7</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_8</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_9</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_A</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_AMPERSAND</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_AT</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_B</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_BACKSPACE</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_BINARY</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_C</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_CLEAR</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_CLEARENTRY</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_COLON</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_COMMA</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_D</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_DBLAMPERSAND</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_DBLVERTICALBAR</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_DECIMAL</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_DIVIDE</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_E</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_ENTER</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_EQUALS</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_EQUALSAS400</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_EXCLAM</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_F</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_GREATER</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_HASH</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_HEXADECIMAL</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_LEFTBRACE</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_LEFTPAREN</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_LESS</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_MEMADD</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_MEMCLEAR</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_MEMDIVIDE</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_MEMMULTIPLY</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_MEMRECALL</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_MEMSTORE</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_MEMSUBTRACT</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_MINUS</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_MULTIPLY</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_OCTAL</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_PERCENT</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_PERIOD</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_PLUS</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_PLUSMINUS</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_POWER</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_RIGHTBRACE</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_RIGHTPAREN</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_SPACE</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_TAB</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_VERTICALBAR</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_KP_XOR</code>)\n‘l’\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_LALT</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_LCTRL</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_LEFT</code>)\n‘{’\n‘[’\n‘(’\nExtended key Left Tab\n‘&lt;’\nExtended key Level 5 Shift\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_LGUI</code>)\nExtended key Left Hyper\nExtended key Left Meta\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_LSHIFT</code>)\n‘m’\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_MEDIA_EJECT</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_MEDIA_FAST_FORWARD</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_MEDIA_NEXT_TRACK</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_MEDIA_PAUSE</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_MEDIA_PLAY</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_MEDIA_PLAY_PAUSE</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_MEDIA_PREVIOUS_TRACK</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_MEDIA_RECORD</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_MEDIA_REWIND</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_MEDIA_SELECT</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_MEDIA_STOP</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_MENU</code>)\n‘-’\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_MODE</code>)\nExtended key Multi-key Compose\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_MUTE</code>)\n‘n’\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_NUMLOCKCLEAR</code>)\n‘o’\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_OPER</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_OUT</code>)\n‘p’\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_PAGEDOWN</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_PAGEUP</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_PASTE</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_PAUSE</code>)\n‘%’\n‘.’\n‘|’\n‘+’\n‘\\xB1’\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_POWER</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_PRINTSCREEN</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_PRIOR</code>)\n‘q’\n‘?’\n‘r’\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_RALT</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_RCTRL</code>)\n‘\\r’\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_RETURN2</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_RGUI</code>)\nExtended key Right Hyper\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_RIGHT</code>)\n‘}’\n‘]’\n‘)’\nExtended key Right Meta\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_RSHIFT</code>)\n‘s’\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_SCROLLLOCK</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_SELECT</code>)\n‘;’\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_SEPARATOR</code>)\n‘/’\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_SLEEP</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_SOFTLEFT</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_SOFTRIGHT</code>)\n’ ’\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_STOP</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_SYSREQ</code>)\n‘t’\n‘\\t’\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_THOUSANDSSEPARATOR</code>)\n‘~’\n‘u’\n‘_’\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_UNDO</code>)\n0\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_UP</code>)\n‘v’\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_VOLUMEDOWN</code>)\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_VOLUMEUP</code>)\n‘w’\nSDL_SCANCODE_TO_KEYCODE(<code>SDL_SCANCODE_WAKE</code>)\n‘x’\n‘y’\n‘z’\nAny Alt key is down.\nthe Caps Lock key is down.\nAny Ctrl key is down.\nAny GUI key is down.\nthe left Alt key is down.\nthe left Ctrl (Control) key is down.\nthe Level 5 Shift key is down.\nthe left GUI key (often the Windows key) is down.\nthe left Shift key is down.\nthe !AltGr key is down.\nno modifier is applicable.\nthe Num Lock key (may be located on an extended keypad) is …\nthe right Alt key is down.\nthe right Ctrl (Control) key is down.\nthe right GUI key (often the Windows key) is down.\nthe right Shift key is down.\nthe Scroll Lock key is down.\nAny Shift key is down.\nThe SDL virtual key representation.\nValid key modifiers (possibly OR’d together).\nLook up the address of the named function in a shared …\nDynamically load a shared object.\nAn opaque datatype that represents a loaded shared object.\nUnload a shared object from memory.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReport the user’s preferred locale.\nA struct to provide locale data.\nA country, like “US” for America. Can be NULL.\nInitialize all fields to zero\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA language name, like “en” for English.\nNo value.\nGet the default log output function.\nGet the current log output function.\nGet the priority of a particular log category.\nLog a message with <code>SDL_LOG_CATEGORY_APPLICATION</code> and …\nThe predefined log categories\nLog a message with <code>SDL_LOG_PRIORITY_CRITICAL</code>.\nLog a message with <code>SDL_LOG_PRIORITY_DEBUG</code>.\nLog a message with <code>SDL_LOG_PRIORITY_ERROR</code>.\nLog a message with <code>SDL_LOG_PRIORITY_INFO</code>.\nLog a message with the specified category and priority.\nLog a message with the specified category and priority.\nThe prototype for the log output callback function.\nThe predefined log priorities")